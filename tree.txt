GOROOT=/usr/local/go #gosetup
GOPATH=/Users/mburbidg/go #gosetup
/usr/local/go/bin/go test -c -o /Users/mburbidg/Library/Caches/JetBrains/GoLand2024.1/tmp/GoLand/___TestNewGenerator_in_github_com_mburbidg_gqlgen.test github.com/mburbidg/gqlgen #gosetup
/usr/local/go/bin/go tool test2json -t /Users/mburbidg/Library/Caches/JetBrains/GoLand2024.1/tmp/GoLand/___TestNewGenerator_in_github_com_mburbidg_gqlgen.test -test.v -test.paniconexit0 -test.run ^\QTestNewGenerator\E$
=== RUN   TestNewGenerator
grammar(0)
  BNFdef(1, GQL-program)
    alt(2)
      group(3)
        BNF(4, program activity)
        opt(5)
          BNF(6, session close command)
      BNF(7, session close command)
  BNFdef(8, program activity)
    alt(9)
      BNF(10, session activity)
      BNF(11, transaction activity)
  BNFdef(12, session activity)
    alt(13)
      repeat(14)
        BNF(15, session reset command)
      group(16)
        repeat(17)
          BNF(18, session set command)
        opt(19)
          repeat(20)
            BNF(21, session reset command)
  BNFdef(22, transaction activity)
    alt(23)
      group(24)
        BNF(25, start transaction command)
        opt(26)
          BNF(27, procedure specification)
          opt(28)
            BNF(29, end transaction command)
      group(30)
        BNF(31, procedure specification)
        opt(32)
          BNF(33, end transaction command)
      BNF(34, end transaction command)
  BNFdef(35, end transaction command)
    alt(36)
      BNF(37, rollback command)
      BNF(38, commit command)
  BNFdef(39, session set command)
    group(40)
      kw(41, SESSION)
      kw(42, SET)
      group(43)
        alt(44)
          BNF(45, session set schema clause)
          BNF(46, session set graph clause)
          BNF(47, session set time zone clause)
          BNF(48, session set parameter clause)
  BNFdef(49, session set schema clause)
    group(50)
      kw(51, SCHEMA)
      BNF(52, schema reference)
  BNFdef(53, session set graph clause)
    group(54)
      opt(55)
        kw(56, PROPERTY)
      kw(57, GRAPH)
      BNF(58, graph expression)
  BNFdef(59, session set time zone clause)
    group(60)
      kw(61, TIME)
      kw(62, ZONE)
      BNF(63, set time zone value)
  BNFdef(64, set time zone value)
    BNF(65, time zone string)
  BNFdef(66, session set parameter clause)
    alt(67)
      BNF(68, session set graph parameter clause)
      BNF(69, session set binding table parameter clause)
      BNF(70, session set value parameter clause)
  BNFdef(71, session set graph parameter clause)
    group(72)
      opt(73)
        kw(74, PROPERTY)
      kw(75, GRAPH)
      BNF(76, session set parameter name)
      BNF(77, opt typed graph initializer)
  BNFdef(78, session set binding table parameter clause)
    group(79)
      opt(80)
        kw(81, BINDING)
      kw(82, TABLE)
      BNF(83, session set parameter name)
      BNF(84, opt typed binding table initializer)
  BNFdef(85, session set value parameter clause)
    group(86)
      kw(87, VALUE)
      BNF(88, session set parameter name)
      BNF(89, opt typed value initializer)
  BNFdef(90, session set parameter name)
    group(91)
      opt(92)
        kw(93, IF)
        kw(94, NOT)
        kw(95, EXISTS)
      BNF(96, session parameter specification)
  BNFdef(97, session reset command)
    group(98)
      kw(99, SESSION)
      kw(100, RESET)
      opt(101)
        BNF(102, session reset arguments)
  BNFdef(103, session reset arguments)
    alt(104)
      group(105)
        opt(106)
          kw(107, ALL)
        group(108)
          alt(109)
            kw(110, PARAMETERS)
            kw(111, CHARACTERISTICS)
      kw(112, SCHEMA)
      group(113)
        opt(114)
          kw(115, PROPERTY)
        kw(116, GRAPH)
      group(117)
        kw(118, TIME)
        kw(119, ZONE)
      group(120)
        opt(121)
          kw(122, PARAMETER)
        BNF(123, session parameter specification)
  BNFdef(124, session close command)
    group(125)
      kw(126, SESSION)
      kw(127, CLOSE)
  BNFdef(128, session parameter specification)
    BNF(129, general parameter reference)
  BNFdef(130, start transaction command)
    group(131)
      kw(132, START)
      kw(133, TRANSACTION)
      opt(134)
        BNF(135, transaction characteristics)
  BNFdef(136, transaction characteristics)
    group(137)
      BNF(138, transaction mode)
      opt(139)
        repeat(140)
          group(141)
            BNF(142, comma)
            BNF(143, transaction mode)
  BNFdef(144, transaction mode)
    alt(145)
      BNF(146, transaction access mode)
      BNF(147, implementation-defined access mode)
  BNFdef(148, transaction access mode)
    alt(149)
      group(150)
        kw(151, READ)
        kw(152, ONLY)
      group(153)
        kw(154, READ)
        kw(155, WRITE)
  BNFdef(156, implementation-defined access mode)
    group(157)
  BNFdef(158, rollback command)
    kw(159, ROLLBACK)
  BNFdef(160, commit command)
    kw(161, COMMIT)
  BNFdef(162, nested procedure specification)
    group(163)
      BNF(164, left brace)
      BNF(165, procedure specification)
      BNF(166, right brace)
  BNFdef(167, procedure specification)
    alt(168)
      BNF(169, catalog-modifying procedure specification)
      BNF(170, data-modifying procedure specification)
      BNF(171, query specification)
  BNFdef(172, catalog-modifying procedure specification)
    BNF(173, procedure body)
  BNFdef(174, nested data-modifying procedure specification)
    group(175)
      BNF(176, left brace)
      BNF(177, data-modifying procedure specification)
      BNF(178, right brace)
  BNFdef(179, data-modifying procedure specification)
    BNF(180, procedure body)
  BNFdef(181, nested query specification)
    group(182)
      BNF(183, left brace)
      BNF(184, query specification)
      BNF(185, right brace)
  BNFdef(186, query specification)
    BNF(187, procedure body)
  BNFdef(188, procedure body)
    group(189)
      opt(190)
        BNF(191, at schema clause)
      opt(192)
        BNF(193, binding variable definition block)
      BNF(194, statement block)
  BNFdef(195, binding variable definition block)
    repeat(196)
      BNF(197, binding variable definition)
  BNFdef(198, binding variable definition)
    alt(199)
      BNF(200, graph variable definition)
      BNF(201, binding table variable definition)
      BNF(202, value variable definition)
  BNFdef(203, statement block)
    group(204)
      BNF(205, statement)
      opt(206)
        repeat(207)
          BNF(208, next statement)
  BNFdef(209, statement)
    alt(210)
      BNF(211, linear catalog-modifying statement)
      BNF(212, linear data-modifying statement)
      BNF(213, composite query statement)
  BNFdef(214, next statement)
    group(215)
      kw(216, NEXT)
      opt(217)
        BNF(218, yield clause)
      BNF(219, statement)
  BNFdef(220, graph variable definition)
    group(221)
      opt(222)
        kw(223, PROPERTY)
      kw(224, GRAPH)
      BNF(225, binding variable)
      BNF(226, opt typed graph initializer)
  BNFdef(227, opt typed graph initializer)
    group(228)
      opt(229)
        opt(230)
          BNF(231, typed)
        BNF(232, graph reference value type)
      BNF(233, graph initializer)
  BNFdef(234, graph initializer)
    group(235)
      BNF(236, equals operator)
      BNF(237, graph expression)
  BNFdef(238, binding table variable definition)
    group(239)
      opt(240)
        kw(241, BINDING)
      kw(242, TABLE)
      BNF(243, binding variable)
      BNF(244, opt typed binding table initializer)
  BNFdef(245, opt typed binding table initializer)
    group(246)
      opt(247)
        opt(248)
          BNF(249, typed)
        BNF(250, binding table reference value type)
      BNF(251, binding table initializer)
  BNFdef(252, binding table initializer)
    group(253)
      BNF(254, equals operator)
      BNF(255, binding table expression)
  BNFdef(256, value variable definition)
    group(257)
      kw(258, VALUE)
      BNF(259, binding variable)
      BNF(260, opt typed value initializer)
  BNFdef(261, opt typed value initializer)
    group(262)
      opt(263)
        opt(264)
          BNF(265, typed)
        BNF(266, value type)
      BNF(267, value initializer)
  BNFdef(268, value initializer)
    group(269)
      BNF(270, equals operator)
      BNF(271, value expression)
  BNFdef(272, graph expression)
    alt(273)
      BNF(274, object expression primary)
      BNF(275, graph reference)
      BNF(276, object name or binding variable)
      BNF(277, current graph)
  BNFdef(278, current graph)
    alt(279)
      kw(280, CURRENT_PROPERTY_GRAPH)
      kw(281, CURRENT_GRAPH)
  BNFdef(282, binding table expression)
    alt(283)
      BNF(284, nested binding table query specification)
      BNF(285, object expression primary)
      BNF(286, binding table reference)
      BNF(287, object name or binding variable)
  BNFdef(288, nested binding table query specification)
    BNF(289, nested query specification)
  BNFdef(290, object expression primary)
    alt(291)
      group(292)
        kw(293, VARIABLE)
        BNF(294, value expression primary)
      BNF(295, parenthesized value expression)
      BNF(296, non-parenthesized value expression primary special case)
  BNFdef(297, linear catalog-modifying statement)
    repeat(298)
      BNF(299, simple catalog-modifying statement)
  BNFdef(300, simple catalog-modifying statement)
    alt(301)
      BNF(302, primitive catalog-modifying statement)
      BNF(303, call catalog-modifying procedure statement)
  BNFdef(304, primitive catalog-modifying statement)
    alt(305)
      BNF(306, create schema statement)
      BNF(307, drop schema statement)
      BNF(308, create graph statement)
      BNF(309, drop graph statement)
      BNF(310, create graph type statement)
      BNF(311, drop graph type statement)
  BNFdef(312, create schema statement)
    group(313)
      kw(314, CREATE)
      kw(315, SCHEMA)
      opt(316)
        kw(317, IF)
        kw(318, NOT)
        kw(319, EXISTS)
      BNF(320, catalog schema parent and name)
  BNFdef(321, drop schema statement)
    group(322)
      kw(323, DROP)
      kw(324, SCHEMA)
      opt(325)
        kw(326, IF)
        kw(327, EXISTS)
      BNF(328, catalog schema parent and name)
  BNFdef(329, create graph statement)
    group(330)
      kw(331, CREATE)
      group(332)
        alt(333)
          group(334)
            opt(335)
              kw(336, PROPERTY)
            kw(337, GRAPH)
            opt(338)
              kw(339, IF)
              kw(340, NOT)
              kw(341, EXISTS)
          group(342)
            kw(343, OR)
            kw(344, REPLACE)
            opt(345)
              kw(346, PROPERTY)
            kw(347, GRAPH)
      BNF(348, catalog graph parent and name)
      group(349)
        alt(350)
          BNF(351, open graph type)
          BNF(352, of graph type)
      opt(353)
        BNF(354, graph source)
  BNFdef(355, open graph type)
    group(356)
      opt(357)
        BNF(358, typed)
      kw(359, ANY)
      opt(360)
        opt(361)
          kw(362, PROPERTY)
        kw(363, GRAPH)
  BNFdef(364, of graph type)
    alt(365)
      BNF(366, graph type like graph)
      group(367)
        opt(368)
          BNF(369, typed)
        BNF(370, graph type reference)
      group(371)
        opt(372)
          BNF(373, typed)
        opt(374)
          opt(375)
            kw(376, PROPERTY)
          kw(377, GRAPH)
        BNF(378, nested graph type specification)
  BNFdef(379, graph type like graph)
    group(380)
      kw(381, LIKE)
      BNF(382, graph expression)
  BNFdef(383, graph source)
    group(384)
      kw(385, AS)
      kw(386, COPY)
      kw(387, OF)
      BNF(388, graph expression)
  BNFdef(389, drop graph statement)
    group(390)
      kw(391, DROP)
      opt(392)
        kw(393, PROPERTY)
      kw(394, GRAPH)
      opt(395)
        kw(396, IF)
        kw(397, EXISTS)
      BNF(398, catalog graph parent and name)
  BNFdef(399, create graph type statement)
    group(400)
      kw(401, CREATE)
      group(402)
        alt(403)
          group(404)
            opt(405)
              kw(406, PROPERTY)
            kw(407, GRAPH)
            kw(408, TYPE)
            opt(409)
              kw(410, IF)
              kw(411, NOT)
              kw(412, EXISTS)
          group(413)
            kw(414, OR)
            kw(415, REPLACE)
            opt(416)
              kw(417, PROPERTY)
            kw(418, GRAPH)
            kw(419, TYPE)
      BNF(420, catalog graph type parent and name)
      BNF(421, graph type source)
  BNFdef(422, graph type source)
    alt(423)
      group(424)
        opt(425)
          kw(426, AS)
        BNF(427, copy of graph type)
      BNF(428, graph type like graph)
      group(429)
        opt(430)
          kw(431, AS)
        BNF(432, nested graph type specification)
  BNFdef(433, copy of graph type)
    group(434)
      kw(435, COPY)
      kw(436, OF)
      group(437)
        alt(438)
          BNF(439, graph type reference)
          BNF(440, external object reference)
  BNFdef(441, drop graph type statement)
    group(442)
      kw(443, DROP)
      opt(444)
        kw(445, PROPERTY)
      kw(446, GRAPH)
      kw(447, TYPE)
      opt(448)
        kw(449, IF)
        kw(450, EXISTS)
      BNF(451, catalog graph type parent and name)
  BNFdef(452, call catalog-modifying procedure statement)
    BNF(453, call procedure statement)
  BNFdef(454, linear data-modifying statement)
    alt(455)
      BNF(456, focused linear data-modifying statement)
      BNF(457, ambient linear data-modifying statement)
  BNFdef(458, focused linear data-modifying statement)
    alt(459)
      BNF(460, focused linear data-modifying statement body)
      BNF(461, focused nested data-modifying procedure specification)
  BNFdef(462, focused linear data-modifying statement body)
    group(463)
      BNF(464, use graph clause)
      BNF(465, simple linear data-accessing statement)
      opt(466)
        BNF(467, primitive result statement)
  BNFdef(468, focused nested data-modifying procedure specification)
    group(469)
      BNF(470, use graph clause)
      BNF(471, nested data-modifying procedure specification)
  BNFdef(472, ambient linear data-modifying statement)
    alt(473)
      BNF(474, ambient linear data-modifying statement body)
      BNF(475, nested data-modifying procedure specification)
  BNFdef(476, ambient linear data-modifying statement body)
    group(477)
      BNF(478, simple linear data-accessing statement)
      opt(479)
        BNF(480, primitive result statement)
  BNFdef(481, simple linear data-accessing statement)
    repeat(482)
      BNF(483, simple data-accessing statement)
  BNFdef(484, simple data-accessing statement)
    alt(485)
      BNF(486, simple query statement)
      BNF(487, simple data-modifying statement)
  BNFdef(488, simple data-modifying statement)
    alt(489)
      BNF(490, primitive data-modifying statement)
      BNF(491, call data-modifying procedure statement)
  BNFdef(492, primitive data-modifying statement)
    alt(493)
      BNF(494, insert statement)
      BNF(495, set statement)
      BNF(496, remove statement)
      BNF(497, delete statement)
  BNFdef(498, insert statement)
    group(499)
      kw(500, INSERT)
      BNF(501, insert graph pattern)
  BNFdef(502, set statement)
    group(503)
      kw(504, SET)
      BNF(505, set item list)
  BNFdef(506, set item list)
    group(507)
      BNF(508, set item)
      opt(509)
        repeat(510)
          group(511)
            BNF(512, comma)
            BNF(513, set item)
  BNFdef(514, set item)
    alt(515)
      BNF(516, set property item)
      BNF(517, set all properties item)
      BNF(518, set label item)
  BNFdef(519, set property item)
    group(520)
      BNF(521, binding variable reference)
      BNF(522, period)
      BNF(523, property name)
      BNF(524, equals operator)
      BNF(525, value expression)
  BNFdef(526, set all properties item)
    group(527)
      BNF(528, binding variable reference)
      BNF(529, equals operator)
      BNF(530, left brace)
      opt(531)
        BNF(532, property key value pair list)
      BNF(533, right brace)
  BNFdef(534, set label item)
    group(535)
      BNF(536, binding variable reference)
      BNF(537, is or colon)
      BNF(538, label name)
  BNFdef(539, remove statement)
    group(540)
      kw(541, REMOVE)
      BNF(542, remove item list)
  BNFdef(543, remove item list)
    group(544)
      BNF(545, remove item)
      opt(546)
        repeat(547)
          group(548)
            BNF(549, comma)
            BNF(550, remove item)
  BNFdef(551, remove item)
    alt(552)
      BNF(553, remove property item)
      BNF(554, remove label item)
  BNFdef(555, remove property item)
    group(556)
      BNF(557, binding variable reference)
      BNF(558, period)
      BNF(559, property name)
  BNFdef(560, remove label item)
    group(561)
      BNF(562, binding variable reference)
      BNF(563, is or colon)
      BNF(564, label name)
  BNFdef(565, delete statement)
    group(566)
      opt(567)
        alt(568)
          kw(569, DETACH)
          kw(570, NODETACH)
      kw(571, DELETE)
      BNF(572, delete item list)
  BNFdef(573, delete item list)
    group(574)
      BNF(575, delete item)
      opt(576)
        repeat(577)
          group(578)
            BNF(579, comma)
            BNF(580, delete item)
  BNFdef(581, delete item)
    BNF(582, value expression)
  BNFdef(583, call data-modifying procedure statement)
    BNF(584, call procedure statement)
  BNFdef(585, composite query statement)
    BNF(586, composite query expression)
  BNFdef(587, composite query expression)
    alt(588)
      group(589)
        BNF(590, composite query expression)
        BNF(591, query conjunction)
        BNF(592, composite query primary)
      BNF(593, composite query primary)
  BNFdef(594, query conjunction)
    alt(595)
      BNF(596, set operator)
      kw(597, OTHERWISE)
  BNFdef(598, set operator)
    alt(599)
      group(600)
        kw(601, UNION)
        opt(602)
          BNF(603, set quantifier)
      group(604)
        kw(605, EXCEPT)
        opt(606)
          BNF(607, set quantifier)
      group(608)
        kw(609, INTERSECT)
        opt(610)
          BNF(611, set quantifier)
  BNFdef(612, composite query primary)
    BNF(613, linear query statement)
  BNFdef(614, linear query statement)
    alt(615)
      BNF(616, focused linear query statement)
      BNF(617, ambient linear query statement)
  BNFdef(618, focused linear query statement)
    alt(619)
      group(620)
        opt(621)
          repeat(622)
            BNF(623, focused linear query statement part)
        BNF(624, focused linear query and primitive result statement part)
      BNF(625, focused primitive result statement)
      BNF(626, focused nested query specification)
      BNF(627, select statement)
  BNFdef(628, focused linear query statement part)
    group(629)
      BNF(630, use graph clause)
      BNF(631, simple linear query statement)
  BNFdef(632, focused linear query and primitive result statement part)
    group(633)
      BNF(634, use graph clause)
      BNF(635, simple linear query statement)
      BNF(636, primitive result statement)
  BNFdef(637, focused primitive result statement)
    group(638)
      BNF(639, use graph clause)
      BNF(640, primitive result statement)
  BNFdef(641, focused nested query specification)
    group(642)
      BNF(643, use graph clause)
      BNF(644, nested query specification)
  BNFdef(645, ambient linear query statement)
    alt(646)
      group(647)
        opt(648)
          BNF(649, simple linear query statement)
        BNF(650, primitive result statement)
      BNF(651, nested query specification)
  BNFdef(652, simple linear query statement)
    repeat(653)
      BNF(654, simple query statement)
  BNFdef(655, simple query statement)
    alt(656)
      BNF(657, primitive query statement)
      BNF(658, call query statement)
  BNFdef(659, primitive query statement)
    alt(660)
      BNF(661, match statement)
      BNF(662, let statement)
      BNF(663, for statement)
      BNF(664, filter statement)
      BNF(665, order by and page statement)
  BNFdef(666, match statement)
    alt(667)
      BNF(668, simple match statement)
      BNF(669, optional match statement)
  BNFdef(670, simple match statement)
    group(671)
      kw(672, MATCH)
      BNF(673, graph pattern binding table)
  BNFdef(674, optional match statement)
    group(675)
      kw(676, OPTIONAL)
      BNF(677, optional operand)
  BNFdef(678, optional operand)
    alt(679)
      BNF(680, simple match statement)
      group(681)
        BNF(682, left brace)
        BNF(683, match statement block)
        BNF(684, right brace)
      group(685)
        BNF(686, left paren)
        BNF(687, match statement block)
        BNF(688, right paren)
  BNFdef(689, match statement block)
    repeat(690)
      BNF(691, match statement)
  BNFdef(692, call query statement)
    BNF(693, call procedure statement)
  BNFdef(694, filter statement)
    group(695)
      kw(696, FILTER)
      group(697)
        alt(698)
          BNF(699, where clause)
          BNF(700, search condition)
  BNFdef(701, let statement)
    group(702)
      kw(703, LET)
      BNF(704, let variable definition list)
  BNFdef(705, let variable definition list)
    group(706)
      BNF(707, let variable definition)
      opt(708)
        repeat(709)
          group(710)
            BNF(711, comma)
            BNF(712, let variable definition)
  BNFdef(713, let variable definition)
    alt(714)
      BNF(715, value variable definition)
      group(716)
        BNF(717, binding variable)
        BNF(718, equals operator)
        BNF(719, value expression)
  BNFdef(720, for statement)
    group(721)
      kw(722, FOR)
      BNF(723, for item)
      opt(724)
        BNF(725, for ordinality or offset)
  BNFdef(726, for item)
    group(727)
      BNF(728, for item alias)
      BNF(729, for item source)
  BNFdef(730, for item alias)
    group(731)
      BNF(732, binding variable)
      kw(733, IN)
  BNFdef(734, for item source)
    alt(735)
      BNF(736, list value expression)
      BNF(737, binding table reference value expression)
  BNFdef(738, for ordinality or offset)
    group(739)
      kw(740, WITH)
      group(741)
        alt(742)
          kw(743, ORDINALITY)
          kw(744, OFFSET)
      BNF(745, binding variable)
  BNFdef(746, order by and page statement)
    alt(747)
      group(748)
        BNF(749, order by clause)
        opt(750)
          BNF(751, offset clause)
        opt(752)
          BNF(753, limit clause)
      group(754)
        BNF(755, offset clause)
        opt(756)
          BNF(757, limit clause)
      BNF(758, limit clause)
  BNFdef(759, primitive result statement)
    alt(760)
      group(761)
        BNF(762, return statement)
        opt(763)
          BNF(764, order by and page statement)
      kw(765, FINISH)
  BNFdef(766, return statement)
    group(767)
      kw(768, RETURN)
      BNF(769, return statement body)
  BNFdef(770, return statement body)
    alt(771)
      group(772)
        opt(773)
          BNF(774, set quantifier)
        group(775)
          alt(776)
            BNF(777, asterisk)
            BNF(778, return item list)
        opt(779)
          BNF(780, group by clause)
      group(781)
        kw(782, NO)
        kw(783, BINDINGS)
  BNFdef(784, return item list)
    group(785)
      BNF(786, return item)
      opt(787)
        repeat(788)
          group(789)
            BNF(790, comma)
            BNF(791, return item)
  BNFdef(792, return item)
    group(793)
      BNF(794, aggregating value expression)
      opt(795)
        BNF(796, return item alias)
  BNFdef(797, return item alias)
    group(798)
      kw(799, AS)
      BNF(800, identifier)
  BNFdef(801, select statement)
    group(802)
      kw(803, SELECT)
      opt(804)
        BNF(805, set quantifier)
      group(806)
        alt(807)
          BNF(808, asterisk)
          BNF(809, select item list)
      opt(810)
        BNF(811, select statement body)
        opt(812)
          BNF(813, where clause)
        opt(814)
          BNF(815, group by clause)
        opt(816)
          BNF(817, having clause)
        opt(818)
          BNF(819, order by clause)
        opt(820)
          BNF(821, offset clause)
        opt(822)
          BNF(823, limit clause)
  BNFdef(824, select item list)
    group(825)
      BNF(826, select item)
      opt(827)
        repeat(828)
          group(829)
            BNF(830, comma)
            BNF(831, select item)
  BNFdef(832, select item)
    group(833)
      BNF(834, aggregating value expression)
      opt(835)
        BNF(836, select item alias)
  BNFdef(837, select item alias)
    group(838)
      kw(839, AS)
      BNF(840, identifier)
  BNFdef(841, having clause)
    group(842)
      kw(843, HAVING)
      BNF(844, search condition)
  BNFdef(845, select statement body)
    group(846)
      kw(847, FROM)
      group(848)
        alt(849)
          BNF(850, select graph match list)
          BNF(851, select query specification)
  BNFdef(852, select graph match list)
    group(853)
      BNF(854, select graph match)
      opt(855)
        repeat(856)
          group(857)
            BNF(858, comma)
            BNF(859, select graph match)
  BNFdef(860, select graph match)
    group(861)
      BNF(862, graph expression)
      BNF(863, match statement)
  BNFdef(864, select query specification)
    alt(865)
      BNF(866, nested query specification)
      group(867)
        BNF(868, graph expression)
        BNF(869, nested query specification)
  BNFdef(870, call procedure statement)
    group(871)
      opt(872)
        kw(873, OPTIONAL)
      kw(874, CALL)
      BNF(875, procedure call)
  BNFdef(876, procedure call)
    alt(877)
      BNF(878, inline procedure call)
      BNF(879, named procedure call)
  BNFdef(880, inline procedure call)
    group(881)
      opt(882)
        BNF(883, variable scope clause)
      BNF(884, nested procedure specification)
  BNFdef(885, variable scope clause)
    group(886)
      BNF(887, left paren)
      opt(888)
        BNF(889, binding variable reference list)
      BNF(890, right paren)
  BNFdef(891, binding variable reference list)
    group(892)
      BNF(893, binding variable reference)
      opt(894)
        repeat(895)
          group(896)
            BNF(897, comma)
            BNF(898, binding variable reference)
  BNFdef(899, named procedure call)
    group(900)
      BNF(901, procedure reference)
      BNF(902, left paren)
      opt(903)
        BNF(904, procedure argument list)
      BNF(905, right paren)
      opt(906)
        BNF(907, yield clause)
  BNFdef(908, procedure argument list)
    group(909)
      BNF(910, procedure argument)
      opt(911)
        repeat(912)
          group(913)
            BNF(914, comma)
            BNF(915, procedure argument)
  BNFdef(916, procedure argument)
    BNF(917, value expression)
  BNFdef(918, at schema clause)
    group(919)
      kw(920, AT)
      BNF(921, schema reference)
  BNFdef(922, use graph clause)
    group(923)
      kw(924, USE)
      BNF(925, graph expression)
  BNFdef(926, graph pattern binding table)
    group(927)
      BNF(928, graph pattern)
      opt(929)
        BNF(930, graph pattern yield clause)
  BNFdef(931, graph pattern yield clause)
    group(932)
      kw(933, YIELD)
      BNF(934, graph pattern yield item list)
  BNFdef(935, graph pattern yield item list)
    alt(936)
      group(937)
        BNF(938, graph pattern yield item)
        opt(939)
          repeat(940)
            group(941)
              BNF(942, comma)
              BNF(943, graph pattern yield item)
      group(944)
        kw(945, NO)
        kw(946, BINDINGS)
  BNFdef(947, graph pattern yield item)
    alt(948)
      BNF(949, element variable reference)
      BNF(950, path variable reference)
  BNFdef(951, graph pattern)
    group(952)
      opt(953)
        BNF(954, match mode)
      BNF(955, path pattern list)
      opt(956)
        BNF(957, keep clause)
      opt(958)
        BNF(959, graph pattern where clause)
  BNFdef(960, match mode)
    alt(961)
      BNF(962, repeatable elements match mode)
      BNF(963, different edges match mode)
  BNFdef(964, repeatable elements match mode)
    group(965)
      kw(966, REPEATABLE)
      BNF(967, element bindings or elements)
  BNFdef(968, different edges match mode)
    group(969)
      kw(970, DIFFERENT)
      BNF(971, edge bindings or edges)
  BNFdef(972, element bindings or elements)
    alt(973)
      group(974)
        kw(975, ELEMENT)
        opt(976)
          kw(977, BINDINGS)
      kw(978, ELEMENTS)
  BNFdef(979, edge bindings or edges)
    alt(980)
      group(981)
        BNF(982, edge synonym)
        opt(983)
          kw(984, BINDINGS)
      BNF(985, edges synonym)
  BNFdef(986, path pattern list)
    group(987)
      BNF(988, path pattern)
      opt(989)
        repeat(990)
          group(991)
            BNF(992, comma)
            BNF(993, path pattern)
  BNFdef(994, path pattern)
    group(995)
      opt(996)
        BNF(997, path variable declaration)
      opt(998)
        BNF(999, path pattern prefix)
      BNF(1000, path pattern expression)
  BNFdef(1001, path variable declaration)
    group(1002)
      BNF(1003, path variable)
      BNF(1004, equals operator)
  BNFdef(1005, keep clause)
    group(1006)
      kw(1007, KEEP)
      BNF(1008, path pattern prefix)
  BNFdef(1009, graph pattern where clause)
    group(1010)
      kw(1011, WHERE)
      BNF(1012, search condition)
  BNFdef(1013, insert graph pattern)
    BNF(1014, insert path pattern list)
  BNFdef(1015, insert path pattern list)
    group(1016)
      BNF(1017, insert path pattern)
      opt(1018)
        repeat(1019)
          group(1020)
            BNF(1021, comma)
            BNF(1022, insert path pattern)
  BNFdef(1023, insert path pattern)
    group(1024)
      BNF(1025, insert node pattern)
      opt(1026)
        repeat(1027)
          group(1028)
            BNF(1029, insert edge pattern)
            BNF(1030, insert node pattern)
  BNFdef(1031, insert node pattern)
    group(1032)
      BNF(1033, left paren)
      opt(1034)
        BNF(1035, insert element pattern filler)
      BNF(1036, right paren)
  BNFdef(1037, insert edge pattern)
    alt(1038)
      BNF(1039, insert edge pointing left)
      BNF(1040, insert edge pointing right)
      BNF(1041, insert edge undirected)
  BNFdef(1042, insert edge pointing left)
    group(1043)
      BNF(1044, left arrow bracket)
      opt(1045)
        BNF(1046, insert element pattern filler)
      BNF(1047, right bracket minus)
  BNFdef(1048, insert edge pointing right)
    group(1049)
      BNF(1050, minus left bracket)
      opt(1051)
        BNF(1052, insert element pattern filler)
      BNF(1053, bracket right arrow)
  BNFdef(1054, insert edge undirected)
    group(1055)
      BNF(1056, tilde left bracket)
      opt(1057)
        BNF(1058, insert element pattern filler)
      BNF(1059, right bracket tilde)
  BNFdef(1060, insert element pattern filler)
    alt(1061)
      group(1062)
        BNF(1063, element variable declaration)
        opt(1064)
          BNF(1065, label and property set specification)
      group(1066)
        opt(1067)
          BNF(1068, element variable declaration)
        BNF(1069, label and property set specification)
  BNFdef(1070, label and property set specification)
    alt(1071)
      group(1072)
        BNF(1073, is or colon)
        BNF(1074, label set specification)
        opt(1075)
          BNF(1076, element property specification)
      group(1077)
        opt(1078)
          BNF(1079, is or colon)
          BNF(1080, label set specification)
        BNF(1081, element property specification)
  BNFdef(1082, path pattern prefix)
    alt(1083)
      BNF(1084, path mode prefix)
      BNF(1085, path search prefix)
  BNFdef(1086, path mode prefix)
    group(1087)
      BNF(1088, path mode)
      opt(1089)
        BNF(1090, path or paths)
  BNFdef(1091, path mode)
    alt(1092)
      kw(1093, WALK)
      kw(1094, TRAIL)
      kw(1095, SIMPLE)
      kw(1096, ACYCLIC)
  BNFdef(1097, path search prefix)
    alt(1098)
      BNF(1099, all path search)
      BNF(1100, any path search)
      BNF(1101, shortest path search)
  BNFdef(1102, all path search)
    group(1103)
      kw(1104, ALL)
      opt(1105)
        BNF(1106, path mode)
      opt(1107)
        BNF(1108, path or paths)
  BNFdef(1109, path or paths)
    alt(1110)
      kw(1111, PATH)
      kw(1112, PATHS)
  BNFdef(1113, any path search)
    group(1114)
      kw(1115, ANY)
      opt(1116)
        BNF(1117, number of paths)
      opt(1118)
        BNF(1119, path mode)
      opt(1120)
        BNF(1121, path or paths)
  BNFdef(1122, number of paths)
    BNF(1123, non-negative integer specification)
  BNFdef(1124, shortest path search)
    alt(1125)
      BNF(1126, all shortest path search)
      BNF(1127, any shortest path search)
      BNF(1128, counted shortest path search)
      BNF(1129, counted shortest group search)
  BNFdef(1130, all shortest path search)
    group(1131)
      kw(1132, ALL)
      kw(1133, SHORTEST)
      opt(1134)
        BNF(1135, path mode)
      opt(1136)
        BNF(1137, path or paths)
  BNFdef(1138, any shortest path search)
    group(1139)
      kw(1140, ANY)
      kw(1141, SHORTEST)
      opt(1142)
        BNF(1143, path mode)
      opt(1144)
        BNF(1145, path or paths)
  BNFdef(1146, counted shortest path search)
    group(1147)
      kw(1148, SHORTEST)
      BNF(1149, number of paths)
      opt(1150)
        BNF(1151, path mode)
      opt(1152)
        BNF(1153, path or paths)
  BNFdef(1154, counted shortest group search)
    group(1155)
      kw(1156, SHORTEST)
      opt(1157)
        BNF(1158, number of groups)
      opt(1159)
        BNF(1160, path mode)
      opt(1161)
        BNF(1162, path or paths)
      group(1163)
        alt(1164)
          kw(1165, GROUP)
          kw(1166, GROUPS)
  BNFdef(1167, number of groups)
    BNF(1168, non-negative integer specification)
  BNFdef(1169, path pattern expression)
    alt(1170)
      BNF(1171, path term)
      BNF(1172, path multiset alternation)
      BNF(1173, path pattern union)
  BNFdef(1174, path multiset alternation)
    group(1175)
      BNF(1176, path term)
      BNF(1177, multiset alternation operator)
      BNF(1178, path term)
      opt(1179)
        repeat(1180)
          group(1181)
            BNF(1182, multiset alternation operator)
            BNF(1183, path term)
  BNFdef(1184, path pattern union)
    group(1185)
      BNF(1186, path term)
      BNF(1187, vertical bar)
      BNF(1188, path term)
      opt(1189)
        repeat(1190)
          group(1191)
            BNF(1192, vertical bar)
            BNF(1193, path term)
  BNFdef(1194, path term)
    alt(1195)
      BNF(1196, path factor)
      BNF(1197, path concatenation)
  BNFdef(1198, path concatenation)
    group(1199)
      BNF(1200, path term)
      BNF(1201, path factor)
  BNFdef(1202, path factor)
    alt(1203)
      BNF(1204, path primary)
      BNF(1205, quantified path primary)
      BNF(1206, questioned path primary)
  BNFdef(1207, quantified path primary)
    group(1208)
      BNF(1209, path primary)
      BNF(1210, graph pattern quantifier)
  BNFdef(1211, questioned path primary)
    group(1212)
      BNF(1213, path primary)
      BNF(1214, question mark)
  BNFdef(1215, path primary)
    alt(1216)
      BNF(1217, element pattern)
      BNF(1218, parenthesized path pattern expression)
      BNF(1219, simplified path pattern expression)
  BNFdef(1220, element pattern)
    alt(1221)
      BNF(1222, node pattern)
      BNF(1223, edge pattern)
  BNFdef(1224, node pattern)
    group(1225)
      BNF(1226, left paren)
      BNF(1227, element pattern filler)
      BNF(1228, right paren)
  BNFdef(1229, element pattern filler)
    group(1230)
      opt(1231)
        BNF(1232, element variable declaration)
      opt(1233)
        BNF(1234, is label expression)
      opt(1235)
        BNF(1236, element pattern predicate)
  BNFdef(1237, element variable declaration)
    group(1238)
      opt(1239)
        kw(1240, TEMP)
      BNF(1241, element variable)
  BNFdef(1242, is label expression)
    group(1243)
      BNF(1244, is or colon)
      BNF(1245, label expression)
  BNFdef(1246, is or colon)
    alt(1247)
      kw(1248, IS)
      BNF(1249, colon)
  BNFdef(1250, element pattern predicate)
    alt(1251)
      BNF(1252, element pattern where clause)
      BNF(1253, element property specification)
  BNFdef(1254, element pattern where clause)
    group(1255)
      kw(1256, WHERE)
      BNF(1257, search condition)
  BNFdef(1258, element property specification)
    group(1259)
      BNF(1260, left brace)
      BNF(1261, property key value pair list)
      BNF(1262, right brace)
  BNFdef(1263, property key value pair list)
    group(1264)
      BNF(1265, property key value pair)
      opt(1266)
        repeat(1267)
          group(1268)
            BNF(1269, comma)
            BNF(1270, property key value pair)
  BNFdef(1271, property key value pair)
    group(1272)
      BNF(1273, property name)
      BNF(1274, colon)
      BNF(1275, value expression)
  BNFdef(1276, edge pattern)
    alt(1277)
      BNF(1278, full edge pattern)
      BNF(1279, abbreviated edge pattern)
  BNFdef(1280, full edge pattern)
    alt(1281)
      BNF(1282, full edge pointing left)
      BNF(1283, full edge undirected)
      BNF(1284, full edge pointing right)
      BNF(1285, full edge left or undirected)
      BNF(1286, full edge undirected or right)
      BNF(1287, full edge left or right)
      BNF(1288, full edge any direction)
  BNFdef(1289, full edge pointing left)
    group(1290)
      BNF(1291, left arrow bracket)
      BNF(1292, element pattern filler)
      BNF(1293, right bracket minus)
  BNFdef(1294, full edge undirected)
    group(1295)
      BNF(1296, tilde left bracket)
      BNF(1297, element pattern filler)
      BNF(1298, right bracket tilde)
  BNFdef(1299, full edge pointing right)
    group(1300)
      BNF(1301, minus left bracket)
      BNF(1302, element pattern filler)
      BNF(1303, bracket right arrow)
  BNFdef(1304, full edge left or undirected)
    group(1305)
      BNF(1306, left arrow tilde bracket)
      BNF(1307, element pattern filler)
      BNF(1308, right bracket tilde)
  BNFdef(1309, full edge undirected or right)
    group(1310)
      BNF(1311, tilde left bracket)
      BNF(1312, element pattern filler)
      BNF(1313, bracket tilde right arrow)
  BNFdef(1314, full edge left or right)
    group(1315)
      BNF(1316, left arrow bracket)
      BNF(1317, element pattern filler)
      BNF(1318, bracket right arrow)
  BNFdef(1319, full edge any direction)
    group(1320)
      BNF(1321, minus left bracket)
      BNF(1322, element pattern filler)
      BNF(1323, right bracket minus)
  BNFdef(1324, abbreviated edge pattern)
    alt(1325)
      BNF(1326, left arrow)
      BNF(1327, tilde)
      BNF(1328, right arrow)
      BNF(1329, left arrow tilde)
      BNF(1330, tilde right arrow)
      BNF(1331, left minus right)
      BNF(1332, minus sign)
  BNFdef(1333, parenthesized path pattern expression)
    group(1334)
      BNF(1335, left paren)
      opt(1336)
        BNF(1337, subpath variable declaration)
      opt(1338)
        BNF(1339, path mode prefix)
      BNF(1340, path pattern expression)
      opt(1341)
        BNF(1342, parenthesized path pattern where clause)
      BNF(1343, right paren)
  BNFdef(1344, subpath variable declaration)
    group(1345)
      BNF(1346, subpath variable)
      BNF(1347, equals operator)
  BNFdef(1348, parenthesized path pattern where clause)
    group(1349)
      kw(1350, WHERE)
      BNF(1351, search condition)
  BNFdef(1352, label expression)
    alt(1353)
      BNF(1354, label term)
      BNF(1355, label disjunction)
  BNFdef(1356, label disjunction)
    group(1357)
      BNF(1358, label expression)
      BNF(1359, vertical bar)
      BNF(1360, label term)
  BNFdef(1361, label term)
    alt(1362)
      BNF(1363, label factor)
      BNF(1364, label conjunction)
  BNFdef(1365, label conjunction)
    group(1366)
      BNF(1367, label term)
      BNF(1368, ampersand)
      BNF(1369, label factor)
  BNFdef(1370, label factor)
    alt(1371)
      BNF(1372, label primary)
      BNF(1373, label negation)
  BNFdef(1374, label negation)
    group(1375)
      BNF(1376, exclamation mark)
      BNF(1377, label primary)
  BNFdef(1378, label primary)
    alt(1379)
      BNF(1380, label name)
      BNF(1381, wildcard label)
      BNF(1382, parenthesized label expression)
  BNFdef(1383, wildcard label)
    BNF(1384, percent)
  BNFdef(1385, parenthesized label expression)
    group(1386)
      BNF(1387, left paren)
      BNF(1388, label expression)
      BNF(1389, right paren)
  BNFdef(1390, path variable reference)
    BNF(1391, binding variable reference)
  BNFdef(1392, element variable reference)
    BNF(1393, binding variable reference)
  BNFdef(1394, graph pattern quantifier)
    alt(1395)
      BNF(1396, asterisk)
      BNF(1397, plus sign)
      BNF(1398, fixed quantifier)
      BNF(1399, general quantifier)
  BNFdef(1400, fixed quantifier)
    group(1401)
      BNF(1402, left brace)
      BNF(1403, unsigned integer)
      BNF(1404, right brace)
  BNFdef(1405, general quantifier)
    group(1406)
      BNF(1407, left brace)
      opt(1408)
        BNF(1409, lower bound)
      BNF(1410, comma)
      opt(1411)
        BNF(1412, upper bound)
      BNF(1413, right brace)
  BNFdef(1414, lower bound)
    BNF(1415, unsigned integer)
  BNFdef(1416, upper bound)
    BNF(1417, unsigned integer)
  BNFdef(1418, simplified path pattern expression)
    alt(1419)
      BNF(1420, simplified defaulting left)
      BNF(1421, simplified defaulting undirected)
      BNF(1422, simplified defaulting right)
      BNF(1423, simplified defaulting left or undirected)
      BNF(1424, simplified defaulting undirected or right)
      BNF(1425, simplified defaulting left or right)
      BNF(1426, simplified defaulting any direction)
  BNFdef(1427, simplified defaulting left)
    group(1428)
      BNF(1429, left minus slash)
      BNF(1430, simplified contents)
      BNF(1431, slash minus)
  BNFdef(1432, simplified defaulting undirected)
    group(1433)
      BNF(1434, tilde slash)
      BNF(1435, simplified contents)
      BNF(1436, slash tilde)
  BNFdef(1437, simplified defaulting right)
    group(1438)
      BNF(1439, minus slash)
      BNF(1440, simplified contents)
      BNF(1441, slash minus right)
  BNFdef(1442, simplified defaulting left or undirected)
    group(1443)
      BNF(1444, left tilde slash)
      BNF(1445, simplified contents)
      BNF(1446, slash tilde)
  BNFdef(1447, simplified defaulting undirected or right)
    group(1448)
      BNF(1449, tilde slash)
      BNF(1450, simplified contents)
      BNF(1451, slash tilde right)
  BNFdef(1452, simplified defaulting left or right)
    group(1453)
      BNF(1454, left minus slash)
      BNF(1455, simplified contents)
      BNF(1456, slash minus right)
  BNFdef(1457, simplified defaulting any direction)
    group(1458)
      BNF(1459, minus slash)
      BNF(1460, simplified contents)
      BNF(1461, slash minus)
  BNFdef(1462, simplified contents)
    alt(1463)
      BNF(1464, simplified term)
      BNF(1465, simplified path union)
      BNF(1466, simplified multiset alternation)
  BNFdef(1467, simplified path union)
    group(1468)
      BNF(1469, simplified term)
      BNF(1470, vertical bar)
      BNF(1471, simplified term)
      opt(1472)
        repeat(1473)
          group(1474)
            BNF(1475, vertical bar)
            BNF(1476, simplified term)
  BNFdef(1477, simplified multiset alternation)
    group(1478)
      BNF(1479, simplified term)
      BNF(1480, multiset alternation operator)
      BNF(1481, simplified term)
      opt(1482)
        repeat(1483)
          group(1484)
            BNF(1485, multiset alternation operator)
            BNF(1486, simplified term)
  BNFdef(1487, simplified term)
    alt(1488)
      BNF(1489, simplified factor low)
      BNF(1490, simplified concatenation)
  BNFdef(1491, simplified concatenation)
    group(1492)
      BNF(1493, simplified term)
      BNF(1494, simplified factor low)
  BNFdef(1495, simplified factor low)
    alt(1496)
      BNF(1497, simplified factor high)
      BNF(1498, simplified conjunction)
  BNFdef(1499, simplified conjunction)
    group(1500)
      BNF(1501, simplified factor low)
      BNF(1502, ampersand)
      BNF(1503, simplified factor high)
  BNFdef(1504, simplified factor high)
    alt(1505)
      BNF(1506, simplified tertiary)
      BNF(1507, simplified quantified)
      BNF(1508, simplified questioned)
  BNFdef(1509, simplified quantified)
    group(1510)
      BNF(1511, simplified tertiary)
      BNF(1512, graph pattern quantifier)
  BNFdef(1513, simplified questioned)
    group(1514)
      BNF(1515, simplified tertiary)
      BNF(1516, question mark)
  BNFdef(1517, simplified tertiary)
    alt(1518)
      BNF(1519, simplified direction override)
      BNF(1520, simplified secondary)
  BNFdef(1521, simplified direction override)
    alt(1522)
      BNF(1523, simplified override left)
      BNF(1524, simplified override undirected)
      BNF(1525, simplified override right)
      BNF(1526, simplified override left or undirected)
      BNF(1527, simplified override undirected or right)
      BNF(1528, simplified override left or right)
      BNF(1529, simplified override any direction)
  BNFdef(1530, simplified override left)
    group(1531)
      BNF(1532, left angle bracket)
      BNF(1533, simplified secondary)
  BNFdef(1534, simplified override undirected)
    group(1535)
      BNF(1536, tilde)
      BNF(1537, simplified secondary)
  BNFdef(1538, simplified override right)
    group(1539)
      BNF(1540, simplified secondary)
      BNF(1541, right angle bracket)
  BNFdef(1542, simplified override left or undirected)
    group(1543)
      BNF(1544, left arrow tilde)
      BNF(1545, simplified secondary)
  BNFdef(1546, simplified override undirected or right)
    group(1547)
      BNF(1548, tilde)
      BNF(1549, simplified secondary)
      BNF(1550, right angle bracket)
  BNFdef(1551, simplified override left or right)
    group(1552)
      BNF(1553, left angle bracket)
      BNF(1554, simplified secondary)
      BNF(1555, right angle bracket)
  BNFdef(1556, simplified override any direction)
    group(1557)
      BNF(1558, minus sign)
      BNF(1559, simplified secondary)
  BNFdef(1560, simplified secondary)
    alt(1561)
      BNF(1562, simplified primary)
      BNF(1563, simplified negation)
  BNFdef(1564, simplified negation)
    group(1565)
      BNF(1566, exclamation mark)
      BNF(1567, simplified primary)
  BNFdef(1568, simplified primary)
    alt(1569)
      BNF(1570, label name)
      group(1571)
        BNF(1572, left paren)
        BNF(1573, simplified contents)
        BNF(1574, right paren)
  BNFdef(1575, where clause)
    group(1576)
      kw(1577, WHERE)
      BNF(1578, search condition)
  BNFdef(1579, yield clause)
    group(1580)
      kw(1581, YIELD)
      BNF(1582, yield item list)
  BNFdef(1583, yield item list)
    group(1584)
      BNF(1585, yield item)
      opt(1586)
        repeat(1587)
          group(1588)
            BNF(1589, comma)
            BNF(1590, yield item)
  BNFdef(1591, yield item)
    group(1592)
      BNF(1593, yield item name)
      opt(1594)
        BNF(1595, yield item alias)
  BNFdef(1596, yield item name)
    BNF(1597, field name)
  BNFdef(1598, yield item alias)
    group(1599)
      kw(1600, AS)
      BNF(1601, binding variable)
  BNFdef(1602, group by clause)
    group(1603)
      kw(1604, GROUP)
      kw(1605, BY)
      BNF(1606, grouping element list)
  BNFdef(1607, grouping element list)
    alt(1608)
      group(1609)
        BNF(1610, grouping element)
        opt(1611)
          repeat(1612)
            group(1613)
              BNF(1614, comma)
              BNF(1615, grouping element)
      BNF(1616, empty grouping set)
  BNFdef(1617, grouping element)
    BNF(1618, binding variable reference)
  BNFdef(1619, empty grouping set)
    group(1620)
      BNF(1621, left paren)
      BNF(1622, right paren)
  BNFdef(1623, order by clause)
    group(1624)
      kw(1625, ORDER)
      kw(1626, BY)
      BNF(1627, sort specification list)
  BNFdef(1628, sort specification list)
    group(1629)
      BNF(1630, sort specification)
      opt(1631)
        repeat(1632)
          group(1633)
            BNF(1634, comma)
            BNF(1635, sort specification)
  BNFdef(1636, sort specification)
    group(1637)
      BNF(1638, sort key)
      opt(1639)
        BNF(1640, ordering specification)
      opt(1641)
        BNF(1642, null ordering)
  BNFdef(1643, sort key)
    BNF(1644, aggregating value expression)
  BNFdef(1645, ordering specification)
    alt(1646)
      kw(1647, ASC)
      kw(1648, ASCENDING)
      kw(1649, DESC)
      kw(1650, DESCENDING)
  BNFdef(1651, null ordering)
    alt(1652)
      group(1653)
        kw(1654, NULLS)
        kw(1655, FIRST)
      group(1656)
        kw(1657, NULLS)
        kw(1658, LAST)
  BNFdef(1659, limit clause)
    group(1660)
      kw(1661, LIMIT)
      BNF(1662, non-negative integer specification)
  BNFdef(1663, offset clause)
    group(1664)
      BNF(1665, offset synonym)
      BNF(1666, non-negative integer specification)
  BNFdef(1667, offset synonym)
    alt(1668)
      kw(1669, OFFSET)
      kw(1670, SKIP)
  BNFdef(1671, schema reference)
    alt(1672)
      BNF(1673, absolute catalog schema reference)
      BNF(1674, relative catalog schema reference)
      BNF(1675, reference parameter specification)
  BNFdef(1676, absolute catalog schema reference)
    alt(1677)
      BNF(1678, solidus)
      group(1679)
        BNF(1680, absolute directory path)
        BNF(1681, schema name)
  BNFdef(1682, catalog schema parent and name)
    group(1683)
      BNF(1684, absolute directory path)
      BNF(1685, schema name)
  BNFdef(1686, relative catalog schema reference)
    alt(1687)
      BNF(1688, predefined schema reference)
      group(1689)
        BNF(1690, relative directory path)
        BNF(1691, schema name)
  BNFdef(1692, predefined schema reference)
    alt(1693)
      kw(1694, HOME_SCHEMA)
      kw(1695, CURRENT_SCHEMA)
      BNF(1696, period)
  BNFdef(1697, absolute directory path)
    group(1698)
      BNF(1699, solidus)
      opt(1700)
        BNF(1701, simple directory path)
  BNFdef(1702, relative directory path)
    group(1703)
      BNF(1704, double period)
      opt(1705)
        repeat(1706)
          group(1707)
            BNF(1708, solidus)
            BNF(1709, double period)
        BNF(1710, solidus)
        opt(1711)
          BNF(1712, simple directory path)
  BNFdef(1713, simple directory path)
    repeat(1714)
      group(1715)
        BNF(1716, directory name)
        BNF(1717, solidus)
  BNFdef(1718, graph reference)
    alt(1719)
      group(1720)
        BNF(1721, catalog object parent reference)
        BNF(1722, graph name)
      BNF(1723, delimited graph name)
      BNF(1724, home graph)
      BNF(1725, reference parameter specification)
  BNFdef(1726, catalog graph parent and name)
    group(1727)
      opt(1728)
        BNF(1729, catalog object parent reference)
      BNF(1730, graph name)
  BNFdef(1731, home graph)
    alt(1732)
      kw(1733, HOME_PROPERTY_GRAPH)
      kw(1734, HOME_GRAPH)
  BNFdef(1735, graph type reference)
    alt(1736)
      BNF(1737, catalog graph type parent and name)
      BNF(1738, reference parameter specification)
  BNFdef(1739, catalog graph type parent and name)
    group(1740)
      opt(1741)
        BNF(1742, catalog object parent reference)
      BNF(1743, graph type name)
  BNFdef(1744, binding table reference)
    alt(1745)
      group(1746)
        BNF(1747, catalog object parent reference)
        BNF(1748, binding table name)
      BNF(1749, delimited binding table name)
      BNF(1750, reference parameter specification)
  BNFdef(1751, catalog binding table parent and name)
    group(1752)
      opt(1753)
        BNF(1754, catalog object parent reference)
      BNF(1755, binding table name)
  BNFdef(1756, procedure reference)
    alt(1757)
      BNF(1758, catalog procedure parent and name)
      BNF(1759, reference parameter specification)
  BNFdef(1760, catalog procedure parent and name)
    group(1761)
      opt(1762)
        BNF(1763, catalog object parent reference)
      BNF(1764, procedure name)
  BNFdef(1765, catalog object parent reference)
    alt(1766)
      group(1767)
        BNF(1768, schema reference)
        opt(1769)
          BNF(1770, solidus)
        opt(1771)
          repeat(1772)
            group(1773)
              BNF(1774, object name)
              BNF(1775, period)
      repeat(1776)
        group(1777)
          BNF(1778, object name)
          BNF(1779, period)
  BNFdef(1780, reference parameter specification)
    BNF(1781, substituted parameter reference)
  BNFdef(1782, external object reference)
    group(1783)
  BNFdef(1784, nested graph type specification)
    group(1785)
      BNF(1786, left brace)
      BNF(1787, graph type specification body)
      BNF(1788, right brace)
  BNFdef(1789, graph type specification body)
    BNF(1790, element type list)
  BNFdef(1791, element type list)
    group(1792)
      BNF(1793, element type specification)
      opt(1794)
        repeat(1795)
          group(1796)
            BNF(1797, comma)
            BNF(1798, element type specification)
  BNFdef(1799, element type specification)
    alt(1800)
      BNF(1801, node type specification)
      BNF(1802, edge type specification)
  BNFdef(1803, node type specification)
    alt(1804)
      BNF(1805, node type pattern)
      BNF(1806, node type phrase)
  BNFdef(1807, node type pattern)
    group(1808)
      opt(1809)
        BNF(1810, node synonym)
        opt(1811)
          kw(1812, TYPE)
        BNF(1813, node type name)
      BNF(1814, left paren)
      opt(1815)
        BNF(1816, local node type alias)
      opt(1817)
        BNF(1818, node type filler)
      BNF(1819, right paren)
  BNFdef(1820, node type phrase)
    group(1821)
      BNF(1822, node synonym)
      opt(1823)
        kw(1824, TYPE)
      BNF(1825, node type phrase filler)
      opt(1826)
        kw(1827, AS)
        BNF(1828, local node type alias)
  BNFdef(1829, node type phrase filler)
    alt(1830)
      group(1831)
        BNF(1832, node type name)
        opt(1833)
          BNF(1834, node type filler)
      BNF(1835, node type filler)
  BNFdef(1836, node type filler)
    alt(1837)
      group(1838)
        BNF(1839, node type key label set)
        opt(1840)
          BNF(1841, node type implied content)
      BNF(1842, node type implied content)
  BNFdef(1843, local node type alias)
    BNF(1844, regular identifier)
  BNFdef(1845, node type implied content)
    alt(1846)
      BNF(1847, node type label set)
      BNF(1848, node type property types)
      group(1849)
        BNF(1850, node type label set)
        BNF(1851, node type property types)
  BNFdef(1852, node type key label set)
    group(1853)
      opt(1854)
        BNF(1855, label set phrase)
      BNF(1856, implies)
  BNFdef(1857, node type label set)
    BNF(1858, label set phrase)
  BNFdef(1859, node type property types)
    BNF(1860, property types specification)
  BNFdef(1861, edge type specification)
    alt(1862)
      BNF(1863, edge type pattern)
      BNF(1864, edge type phrase)
  BNFdef(1865, edge type pattern)
    group(1866)
      opt(1867)
        opt(1868)
          BNF(1869, edge kind)
        BNF(1870, edge synonym)
        opt(1871)
          kw(1872, TYPE)
        BNF(1873, edge type name)
      group(1874)
        alt(1875)
          BNF(1876, edge type pattern directed)
          BNF(1877, edge type pattern undirected)
  BNFdef(1878, edge type phrase)
    group(1879)
      BNF(1880, edge kind)
      BNF(1881, edge synonym)
      opt(1882)
        kw(1883, TYPE)
      BNF(1884, edge type phrase filler)
      BNF(1885, endpoint pair phrase)
  BNFdef(1886, edge type phrase filler)
    alt(1887)
      group(1888)
        BNF(1889, edge type name)
        opt(1890)
          BNF(1891, edge type filler)
      BNF(1892, edge type filler)
  BNFdef(1893, edge type filler)
    alt(1894)
      group(1895)
        BNF(1896, edge type key label set)
        opt(1897)
          BNF(1898, edge type implied content)
      BNF(1899, edge type implied content)
  BNFdef(1900, edge type implied content)
    alt(1901)
      BNF(1902, edge type label set)
      BNF(1903, edge type property types)
      group(1904)
        BNF(1905, edge type label set)
        BNF(1906, edge type property types)
  BNFdef(1907, edge type key label set)
    group(1908)
      opt(1909)
        BNF(1910, label set phrase)
      BNF(1911, implies)
  BNFdef(1912, edge type label set)
    BNF(1913, label set phrase)
  BNFdef(1914, edge type property types)
    BNF(1915, property types specification)
  BNFdef(1916, edge type pattern directed)
    alt(1917)
      BNF(1918, edge type pattern pointing right)
      BNF(1919, edge type pattern pointing left)
  BNFdef(1920, edge type pattern pointing right)
    group(1921)
      BNF(1922, source node type reference)
      BNF(1923, arc type pointing right)
      BNF(1924, destination node type reference)
  BNFdef(1925, edge type pattern pointing left)
    group(1926)
      BNF(1927, destination node type reference)
      BNF(1928, arc type pointing left)
      BNF(1929, source node type reference)
  BNFdef(1930, edge type pattern undirected)
    group(1931)
      BNF(1932, source node type reference)
      BNF(1933, arc type undirected)
      BNF(1934, destination node type reference)
  BNFdef(1935, arc type pointing right)
    group(1936)
      BNF(1937, minus left bracket)
      BNF(1938, edge type filler)
      BNF(1939, bracket right arrow)
  BNFdef(1940, arc type pointing left)
    group(1941)
      BNF(1942, left arrow bracket)
      BNF(1943, edge type filler)
      BNF(1944, right bracket minus)
  BNFdef(1945, arc type undirected)
    group(1946)
      BNF(1947, tilde left bracket)
      BNF(1948, edge type filler)
      BNF(1949, right bracket tilde)
  BNFdef(1950, source node type reference)
    alt(1951)
      group(1952)
        BNF(1953, left paren)
        BNF(1954, source node type alias)
        BNF(1955, right paren)
      group(1956)
        BNF(1957, left paren)
        opt(1958)
          BNF(1959, node type filler)
        BNF(1960, right paren)
  BNFdef(1961, destination node type reference)
    alt(1962)
      group(1963)
        BNF(1964, left paren)
        BNF(1965, destination node type alias)
        BNF(1966, right paren)
      group(1967)
        BNF(1968, left paren)
        opt(1969)
          BNF(1970, node type filler)
        BNF(1971, right paren)
  BNFdef(1972, edge kind)
    alt(1973)
      kw(1974, DIRECTED)
      kw(1975, UNDIRECTED)
  BNFdef(1976, endpoint pair phrase)
    group(1977)
      kw(1978, CONNECTING)
      BNF(1979, endpoint pair)
  BNFdef(1980, endpoint pair)
    alt(1981)
      BNF(1982, endpoint pair directed)
      BNF(1983, endpoint pair undirected)
  BNFdef(1984, endpoint pair directed)
    alt(1985)
      BNF(1986, endpoint pair pointing right)
      BNF(1987, endpoint pair pointing left)
  BNFdef(1988, endpoint pair pointing right)
    group(1989)
      BNF(1990, left paren)
      BNF(1991, source node type alias)
      BNF(1992, connector pointing right)
      BNF(1993, destination node type alias)
      BNF(1994, right paren)
  BNFdef(1995, endpoint pair pointing left)
    group(1996)
      BNF(1997, left paren)
      BNF(1998, destination node type alias)
      BNF(1999, left arrow)
      BNF(2000, source node type alias)
      BNF(2001, right paren)
  BNFdef(2002, endpoint pair undirected)
    group(2003)
      BNF(2004, left paren)
      BNF(2005, source node type alias)
      BNF(2006, connector undirected)
      BNF(2007, destination node type alias)
      BNF(2008, right paren)
  BNFdef(2009, connector pointing right)
    alt(2010)
      kw(2011, TO)
      BNF(2012, right arrow)
  BNFdef(2013, connector undirected)
    alt(2014)
      kw(2015, TO)
      BNF(2016, tilde)
  BNFdef(2017, source node type alias)
    BNF(2018, regular identifier)
  BNFdef(2019, destination node type alias)
    BNF(2020, regular identifier)
  BNFdef(2021, label set phrase)
    alt(2022)
      group(2023)
        kw(2024, LABEL)
        BNF(2025, label name)
      group(2026)
        kw(2027, LABELS)
        BNF(2028, label set specification)
      group(2029)
        BNF(2030, is or colon)
        BNF(2031, label set specification)
  BNFdef(2032, label set specification)
    group(2033)
      BNF(2034, label name)
      opt(2035)
        repeat(2036)
          group(2037)
            BNF(2038, ampersand)
            BNF(2039, label name)
  BNFdef(2040, property types specification)
    group(2041)
      BNF(2042, left brace)
      opt(2043)
        BNF(2044, property type list)
      BNF(2045, right brace)
  BNFdef(2046, property type list)
    group(2047)
      BNF(2048, property type)
      opt(2049)
        repeat(2050)
          group(2051)
            BNF(2052, comma)
            BNF(2053, property type)
  BNFdef(2054, property type)
    group(2055)
      BNF(2056, property name)
      opt(2057)
        BNF(2058, typed)
      BNF(2059, property value type)
  BNFdef(2060, property value type)
    BNF(2061, value type)
  BNFdef(2062, binding table type)
    group(2063)
      opt(2064)
        kw(2065, BINDING)
      kw(2066, TABLE)
      BNF(2067, field types specification)
  BNFdef(2068, value type)
    alt(2069)
      BNF(2070, predefined type)
      BNF(2071, constructed value type)
      BNF(2072, dynamic union type)
  BNFdef(2073, typed)
    alt(2074)
      BNF(2075, double colon)
      kw(2076, TYPED)
  BNFdef(2077, predefined type)
    alt(2078)
      BNF(2079, boolean type)
      BNF(2080, character string type)
      BNF(2081, byte string type)
      BNF(2082, numeric type)
      BNF(2083, temporal type)
      BNF(2084, reference value type)
      BNF(2085, immaterial value type)
  BNFdef(2086, boolean type)
    group(2087)
      group(2088)
        alt(2089)
          kw(2090, BOOL)
          kw(2091, BOOLEAN)
      opt(2092)
        BNF(2093, not null)
  BNFdef(2094, character string type)
    alt(2095)
      group(2096)
        kw(2097, STRING)
        opt(2098)
          BNF(2099, left paren)
          opt(2100)
            BNF(2101, min length)
            BNF(2102, comma)
          BNF(2103, max length)
          BNF(2104, right paren)
        opt(2105)
          BNF(2106, not null)
      group(2107)
        kw(2108, CHAR)
        opt(2109)
          BNF(2110, left paren)
          BNF(2111, fixed length)
          BNF(2112, right paren)
        opt(2113)
          BNF(2114, not null)
      group(2115)
        kw(2116, VARCHAR)
        opt(2117)
          BNF(2118, left paren)
          BNF(2119, max length)
          BNF(2120, right paren)
        opt(2121)
          BNF(2122, not null)
  BNFdef(2123, byte string type)
    alt(2124)
      group(2125)
        kw(2126, BYTES)
        opt(2127)
          BNF(2128, left paren)
          opt(2129)
            BNF(2130, min length)
            BNF(2131, comma)
          BNF(2132, max length)
          BNF(2133, right paren)
        opt(2134)
          BNF(2135, not null)
      group(2136)
        kw(2137, BINARY)
        opt(2138)
          BNF(2139, left paren)
          BNF(2140, fixed length)
          BNF(2141, right paren)
        opt(2142)
          BNF(2143, not null)
      group(2144)
        kw(2145, VARBINARY)
        opt(2146)
          BNF(2147, left paren)
          BNF(2148, max length)
          BNF(2149, right paren)
        opt(2150)
          BNF(2151, not null)
  BNFdef(2152, min length)
    BNF(2153, unsigned integer)
  BNFdef(2154, max length)
    BNF(2155, unsigned integer)
  BNFdef(2156, fixed length)
    BNF(2157, unsigned integer)
  BNFdef(2158, numeric type)
    alt(2159)
      BNF(2160, exact numeric type)
      BNF(2161, approximate numeric type)
  BNFdef(2162, exact numeric type)
    alt(2163)
      BNF(2164, binary exact numeric type)
      BNF(2165, decimal exact numeric type)
  BNFdef(2166, binary exact numeric type)
    alt(2167)
      BNF(2168, signed binary exact numeric type)
      BNF(2169, unsigned binary exact numeric type)
  BNFdef(2170, signed binary exact numeric type)
    alt(2171)
      group(2172)
        kw(2173, INT8)
        opt(2174)
          BNF(2175, not null)
      group(2176)
        kw(2177, INT16)
        opt(2178)
          BNF(2179, not null)
      group(2180)
        kw(2181, INT32)
        opt(2182)
          BNF(2183, not null)
      group(2184)
        kw(2185, INT64)
        opt(2186)
          BNF(2187, not null)
      group(2188)
        kw(2189, INT128)
        opt(2190)
          BNF(2191, not null)
      group(2192)
        kw(2193, INT256)
        opt(2194)
          BNF(2195, not null)
      group(2196)
        kw(2197, SMALLINT)
        opt(2198)
          BNF(2199, not null)
      group(2200)
        kw(2201, INT)
        opt(2202)
          BNF(2203, left paren)
          BNF(2204, precision)
          BNF(2205, right paren)
        opt(2206)
          BNF(2207, not null)
      group(2208)
        kw(2209, BIGINT)
        opt(2210)
          BNF(2211, not null)
      group(2212)
        opt(2213)
          kw(2214, SIGNED)
        BNF(2215, verbose binary exact numeric type)
  BNFdef(2216, unsigned binary exact numeric type)
    alt(2217)
      group(2218)
        kw(2219, UINT8)
        opt(2220)
          BNF(2221, not null)
      group(2222)
        kw(2223, UINT16)
        opt(2224)
          BNF(2225, not null)
      group(2226)
        kw(2227, UINT32)
        opt(2228)
          BNF(2229, not null)
      group(2230)
        kw(2231, UINT64)
        opt(2232)
          BNF(2233, not null)
      group(2234)
        kw(2235, UINT128)
        opt(2236)
          BNF(2237, not null)
      group(2238)
        kw(2239, UINT256)
        opt(2240)
          BNF(2241, not null)
      group(2242)
        kw(2243, USMALLINT)
        opt(2244)
          BNF(2245, not null)
      group(2246)
        kw(2247, UINT)
        opt(2248)
          BNF(2249, left paren)
          BNF(2250, precision)
          BNF(2251, right paren)
        opt(2252)
          BNF(2253, not null)
      group(2254)
        kw(2255, UBIGINT)
        opt(2256)
          BNF(2257, not null)
      group(2258)
        kw(2259, UNSIGNED)
        BNF(2260, verbose binary exact numeric type)
  BNFdef(2261, verbose binary exact numeric type)
    alt(2262)
      group(2263)
        kw(2264, INTEGER8)
        opt(2265)
          BNF(2266, not null)
      group(2267)
        kw(2268, INTEGER16)
        opt(2269)
          BNF(2270, not null)
      group(2271)
        kw(2272, INTEGER32)
        opt(2273)
          BNF(2274, not null)
      group(2275)
        kw(2276, INTEGER64)
        opt(2277)
          BNF(2278, not null)
      group(2279)
        kw(2280, INTEGER128)
        opt(2281)
          BNF(2282, not null)
      group(2283)
        kw(2284, INTEGER256)
        opt(2285)
          BNF(2286, not null)
      group(2287)
        kw(2288, SMALL)
        kw(2289, INTEGER)
        opt(2290)
          BNF(2291, not null)
      group(2292)
        kw(2293, INTEGER)
        opt(2294)
          BNF(2295, left paren)
          BNF(2296, precision)
          BNF(2297, right paren)
        opt(2298)
          BNF(2299, not null)
      group(2300)
        kw(2301, BIG)
        kw(2302, INTEGER)
        opt(2303)
          BNF(2304, not null)
  BNFdef(2305, decimal exact numeric type)
    group(2306)
      group(2307)
        alt(2308)
          kw(2309, DECIMAL)
          kw(2310, DEC)
      opt(2311)
        BNF(2312, left paren)
        BNF(2313, precision)
        opt(2314)
          BNF(2315, comma)
          BNF(2316, scale)
        BNF(2317, right paren)
        opt(2318)
          BNF(2319, not null)
  BNFdef(2320, precision)
    BNF(2321, unsigned decimal integer)
  BNFdef(2322, scale)
    BNF(2323, unsigned decimal integer)
  BNFdef(2324, approximate numeric type)
    alt(2325)
      group(2326)
        kw(2327, FLOAT16)
        opt(2328)
          BNF(2329, not null)
      group(2330)
        kw(2331, FLOAT32)
        opt(2332)
          BNF(2333, not null)
      group(2334)
        kw(2335, FLOAT64)
        opt(2336)
          BNF(2337, not null)
      group(2338)
        kw(2339, FLOAT128)
        opt(2340)
          BNF(2341, not null)
      group(2342)
        kw(2343, FLOAT256)
        opt(2344)
          BNF(2345, not null)
      group(2346)
        kw(2347, FLOAT)
        opt(2348)
          BNF(2349, left paren)
          BNF(2350, precision)
          opt(2351)
            BNF(2352, comma)
            BNF(2353, scale)
          BNF(2354, right paren)
        opt(2355)
          BNF(2356, not null)
      group(2357)
        kw(2358, REAL)
        opt(2359)
          BNF(2360, not null)
      group(2361)
        kw(2362, DOUBLE)
        opt(2363)
          kw(2364, PRECISION)
        opt(2365)
          BNF(2366, not null)
  BNFdef(2367, temporal type)
    alt(2368)
      BNF(2369, temporal instant type)
      BNF(2370, temporal duration type)
  BNFdef(2371, temporal instant type)
    alt(2372)
      BNF(2373, datetime type)
      BNF(2374, localdatetime type)
      BNF(2375, date type)
      BNF(2376, time type)
      BNF(2377, localtime type)
  BNFdef(2378, datetime type)
    alt(2379)
      group(2380)
        kw(2381, ZONED)
        kw(2382, DATETIME)
        opt(2383)
          BNF(2384, not null)
      group(2385)
        kw(2386, TIMESTAMP)
        kw(2387, WITH)
        kw(2388, TIME)
        kw(2389, ZONE)
        opt(2390)
          BNF(2391, not null)
  BNFdef(2392, localdatetime type)
    alt(2393)
      group(2394)
        kw(2395, LOCAL)
        kw(2396, DATETIME)
        opt(2397)
          BNF(2398, not null)
      group(2399)
        kw(2400, TIMESTAMP)
        opt(2401)
          kw(2402, WITHOUT)
          kw(2403, TIME)
          kw(2404, ZONE)
        opt(2405)
          BNF(2406, not null)
  BNFdef(2407, date type)
    group(2408)
      kw(2409, DATE)
      opt(2410)
        BNF(2411, not null)
  BNFdef(2412, time type)
    alt(2413)
      group(2414)
        kw(2415, ZONED)
        kw(2416, TIME)
        opt(2417)
          BNF(2418, not null)
      group(2419)
        kw(2420, TIME)
        kw(2421, WITH)
        kw(2422, TIME)
        kw(2423, ZONE)
        opt(2424)
          BNF(2425, not null)
  BNFdef(2426, localtime type)
    alt(2427)
      group(2428)
        kw(2429, LOCAL)
        kw(2430, TIME)
        opt(2431)
          BNF(2432, not null)
      group(2433)
        kw(2434, TIME)
        kw(2435, WITHOUT)
        kw(2436, TIME)
        kw(2437, ZONE)
        opt(2438)
          BNF(2439, not null)
  BNFdef(2440, temporal duration type)
    group(2441)
      kw(2442, DURATION)
      BNF(2443, left paren)
      BNF(2444, temporal duration qualifier)
      BNF(2445, right paren)
      opt(2446)
        BNF(2447, not null)
  BNFdef(2448, temporal duration qualifier)
    alt(2449)
      group(2450)
        kw(2451, YEAR)
        kw(2452, TO)
        kw(2453, MONTH)
      group(2454)
        kw(2455, DAY)
        kw(2456, TO)
        kw(2457, SECOND)
  BNFdef(2458, reference value type)
    alt(2459)
      BNF(2460, graph reference value type)
      BNF(2461, binding table reference value type)
      BNF(2462, node reference value type)
      BNF(2463, edge reference value type)
  BNFdef(2464, immaterial value type)
    alt(2465)
      BNF(2466, null type)
      BNF(2467, empty type)
  BNFdef(2468, null type)
    kw(2469, NULL)
  BNFdef(2470, empty type)
    alt(2471)
      group(2472)
        kw(2473, NULL)
        BNF(2474, not null)
      kw(2475, NOTHING)
  BNFdef(2476, graph reference value type)
    alt(2477)
      BNF(2478, open graph reference value type)
      BNF(2479, closed graph reference value type)
  BNFdef(2480, closed graph reference value type)
    group(2481)
      opt(2482)
        kw(2483, PROPERTY)
      kw(2484, GRAPH)
      BNF(2485, nested graph type specification)
      opt(2486)
        BNF(2487, not null)
  BNFdef(2488, open graph reference value type)
    group(2489)
      kw(2490, ANY)
      opt(2491)
        kw(2492, PROPERTY)
      kw(2493, GRAPH)
      opt(2494)
        BNF(2495, not null)
  BNFdef(2496, binding table reference value type)
    group(2497)
      BNF(2498, binding table type)
      opt(2499)
        BNF(2500, not null)
  BNFdef(2501, node reference value type)
    alt(2502)
      BNF(2503, open node reference value type)
      BNF(2504, closed node reference value type)
  BNFdef(2505, closed node reference value type)
    group(2506)
      BNF(2507, node type specification)
      opt(2508)
        BNF(2509, not null)
  BNFdef(2510, open node reference value type)
    group(2511)
      opt(2512)
        kw(2513, ANY)
      BNF(2514, node synonym)
      opt(2515)
        BNF(2516, not null)
  BNFdef(2517, edge reference value type)
    alt(2518)
      BNF(2519, open edge reference value type)
      BNF(2520, closed edge reference value type)
  BNFdef(2521, closed edge reference value type)
    group(2522)
      BNF(2523, edge type specification)
      opt(2524)
        BNF(2525, not null)
  BNFdef(2526, open edge reference value type)
    group(2527)
      opt(2528)
        kw(2529, ANY)
      BNF(2530, edge synonym)
      opt(2531)
        BNF(2532, not null)
  BNFdef(2533, constructed value type)
    alt(2534)
      BNF(2535, path value type)
      BNF(2536, list value type)
      BNF(2537, record type)
  BNFdef(2538, path value type)
    group(2539)
      kw(2540, PATH)
      opt(2541)
        BNF(2542, not null)
  BNFdef(2543, list value type)
    group(2544)
      group(2545)
        alt(2546)
          group(2547)
            BNF(2548, list value type name)
            BNF(2549, left angle bracket)
            BNF(2550, value type)
            BNF(2551, right angle bracket)
          group(2552)
            opt(2553)
              BNF(2554, value type)
            BNF(2555, list value type name)
      opt(2556)
        BNF(2557, left bracket)
        BNF(2558, max length)
        BNF(2559, right bracket)
      opt(2560)
        BNF(2561, not null)
  BNFdef(2562, list value type name)
    group(2563)
      opt(2564)
        kw(2565, GROUP)
      BNF(2566, list value type name synonym)
  BNFdef(2567, list value type name synonym)
    alt(2568)
      kw(2569, LIST)
      kw(2570, ARRAY)
  BNFdef(2571, record type)
    alt(2572)
      group(2573)
        opt(2574)
          kw(2575, ANY)
        kw(2576, RECORD)
        opt(2577)
          BNF(2578, not null)
      group(2579)
        opt(2580)
          kw(2581, RECORD)
        BNF(2582, field types specification)
        opt(2583)
          BNF(2584, not null)
  BNFdef(2585, field types specification)
    group(2586)
      BNF(2587, left brace)
      opt(2588)
        BNF(2589, field type list)
      BNF(2590, right brace)
  BNFdef(2591, field type list)
    group(2592)
      BNF(2593, field type)
      opt(2594)
        repeat(2595)
          group(2596)
            BNF(2597, comma)
            BNF(2598, field type)
  BNFdef(2599, dynamic union type)
    alt(2600)
      BNF(2601, open dynamic union type)
      BNF(2602, dynamic property value type)
      BNF(2603, closed dynamic union type)
  BNFdef(2604, open dynamic union type)
    group(2605)
      kw(2606, ANY)
      opt(2607)
        kw(2608, VALUE)
      opt(2609)
        BNF(2610, not null)
  BNFdef(2611, dynamic property value type)
    group(2612)
      opt(2613)
        kw(2614, ANY)
      kw(2615, PROPERTY)
      kw(2616, VALUE)
      opt(2617)
        BNF(2618, not null)
  BNFdef(2619, closed dynamic union type)
    alt(2620)
      group(2621)
        kw(2622, ANY)
        opt(2623)
          kw(2624, VALUE)
        BNF(2625, left angle bracket)
        BNF(2626, component type list)
        BNF(2627, right angle bracket)
      BNF(2628, component type list)
  BNFdef(2629, component type list)
    group(2630)
      BNF(2631, component type)
      opt(2632)
        repeat(2633)
          group(2634)
            BNF(2635, vertical bar)
            BNF(2636, component type)
  BNFdef(2637, component type)
    BNF(2638, value type)
  BNFdef(2639, not null)
    group(2640)
      kw(2641,  NOT)
      kw(2642, NULL)
  BNFdef(2643, field type)
    group(2644)
      BNF(2645, field name)
      opt(2646)
        BNF(2647, typed)
      BNF(2648, value type)
  BNFdef(2649, search condition)
    BNF(2650, boolean value expression)
  BNFdef(2651, predicate)
    alt(2652)
      BNF(2653, comparison predicate)
      BNF(2654, exists predicate)
      BNF(2655, null predicate)
      BNF(2656, normalized predicate)
      BNF(2657, value type predicate)
      BNF(2658, directed predicate)
      BNF(2659, labeled predicate)
      BNF(2660, source/destination predicate)
      BNF(2661, all_different predicate)
      BNF(2662, same predicate)
      BNF(2663, property_exists predicate)
  BNFdef(2664, comparison predicate)
    group(2665)
      BNF(2666, comparison predicand)
      BNF(2667, comparison predicate part 2)
  BNFdef(2668, comparison predicate part 2)
    group(2669)
      BNF(2670, comp op)
      BNF(2671, comparison predicand)
  BNFdef(2672, comp op)
    alt(2673)
      BNF(2674, equals operator)
      BNF(2675, not equals operator)
      BNF(2676, less than operator)
      BNF(2677, greater than operator)
      BNF(2678, less than or equals operator)
      BNF(2679, greater than or equals operator)
  BNFdef(2680, comparison predicand)
    alt(2681)
      BNF(2682, common value expression)
      BNF(2683, boolean predicand)
  BNFdef(2684, exists predicate)
    group(2685)
      kw(2686, EXISTS)
      group(2687)
        alt(2688)
          group(2689)
            BNF(2690, left brace)
            BNF(2691, graph pattern)
            BNF(2692, right brace)
          group(2693)
            BNF(2694, left paren)
            BNF(2695, graph pattern)
            BNF(2696, right paren)
          group(2697)
            BNF(2698, left brace)
            BNF(2699, match statement block)
            BNF(2700, right brace)
          group(2701)
            BNF(2702, left paren)
            BNF(2703, match statement block)
            BNF(2704, right paren)
          BNF(2705, nested query specification)
  BNFdef(2706, null predicate)
    group(2707)
      BNF(2708, value expression primary)
      BNF(2709, null predicate part 2)
  BNFdef(2710, null predicate part 2)
    group(2711)
      kw(2712, IS)
      opt(2713)
        kw(2714, NOT)
      kw(2715, NULL)
  BNFdef(2716, value type predicate)
    group(2717)
      BNF(2718, value expression primary)
      BNF(2719, value type predicate part 2)
  BNFdef(2720, value type predicate part 2)
    group(2721)
      kw(2722, IS)
      opt(2723)
        kw(2724, NOT)
      BNF(2725, typed)
      BNF(2726, value type)
  BNFdef(2727, normalized predicate)
    group(2728)
      BNF(2729, string value expression)
      BNF(2730, normalized predicate part 2)
  BNFdef(2731, normalized predicate part 2)
    group(2732)
      kw(2733, IS)
      opt(2734)
        kw(2735, NOT)
      opt(2736)
        BNF(2737, normal form)
      kw(2738, NORMALIZED)
  BNFdef(2739, directed predicate)
    group(2740)
      BNF(2741, element variable reference)
      BNF(2742, directed predicate part 2)
  BNFdef(2743, directed predicate part 2)
    group(2744)
      kw(2745, IS)
      opt(2746)
        kw(2747, NOT)
      kw(2748, DIRECTED)
  BNFdef(2749, labeled predicate)
    group(2750)
      BNF(2751, element variable reference)
      BNF(2752, labeled predicate part 2)
  BNFdef(2753, labeled predicate part 2)
    group(2754)
      BNF(2755, is labeled or colon)
      BNF(2756, label expression)
  BNFdef(2757, is labeled or colon)
    alt(2758)
      group(2759)
        kw(2760, IS)
        opt(2761)
          kw(2762, NOT)
        kw(2763, LABELED)
      BNF(2764, colon)
  BNFdef(2765, source/destination predicate)
    alt(2766)
      group(2767)
        BNF(2768, node reference)
        BNF(2769, source predicate part 2)
      group(2770)
        BNF(2771, node reference)
        BNF(2772, destination predicate part 2)
  BNFdef(2773, node reference)
    BNF(2774, element variable reference)
  BNFdef(2775, source predicate part 2)
    group(2776)
      kw(2777, IS)
      opt(2778)
        kw(2779, NOT)
      kw(2780, SOURCE)
      kw(2781, OF)
      BNF(2782, edge reference)
  BNFdef(2783, destination predicate part 2)
    group(2784)
      kw(2785, IS)
      opt(2786)
        kw(2787, NOT)
      kw(2788, DESTINATION)
      kw(2789, OF)
      BNF(2790, edge reference)
  BNFdef(2791, edge reference)
    BNF(2792, element variable reference)
  BNFdef(2793, all_different predicate)
    group(2794)
      kw(2795, ALL_DIFFERENT)
      BNF(2796, left paren)
      BNF(2797, element variable reference)
      BNF(2798, comma)
      BNF(2799, element variable reference)
      opt(2800)
        repeat(2801)
          group(2802)
            BNF(2803, comma)
            BNF(2804, element variable reference)
      BNF(2805, right paren)
  BNFdef(2806, same predicate)
    group(2807)
      kw(2808, SAME)
      BNF(2809, left paren)
      BNF(2810, element variable reference)
      BNF(2811, comma)
      BNF(2812, element variable reference)
      opt(2813)
        repeat(2814)
          group(2815)
            BNF(2816, comma)
            BNF(2817, element variable reference)
      BNF(2818, right paren)
  BNFdef(2819, property_exists predicate)
    group(2820)
      kw(2821, PROPERTY_EXISTS)
      BNF(2822, left paren)
      BNF(2823, element variable reference)
      BNF(2824, comma)
      BNF(2825, property name)
      BNF(2826, right paren)
  BNFdef(2827, value expression)
    alt(2828)
      BNF(2829, common value expression)
      BNF(2830, boolean value expression)
  BNFdef(2831, common value expression)
    alt(2832)
      BNF(2833, numeric value expression)
      BNF(2834, string value expression)
      BNF(2835, datetime value expression)
      BNF(2836, duration value expression)
      BNF(2837, list value expression)
      BNF(2838, record expression)
      BNF(2839, path value expression)
      BNF(2840, reference value expression)
  BNFdef(2841, reference value expression)
    alt(2842)
      BNF(2843, graph reference value expression)
      BNF(2844, binding table reference value expression)
      BNF(2845, node reference value expression)
      BNF(2846, edge reference value expression)
  BNFdef(2847, graph reference value expression)
    alt(2848)
      group(2849)
        opt(2850)
          kw(2851, PROPERTY)
        kw(2852, GRAPH)
        BNF(2853, graph expression)
      BNF(2854, value expression primary)
  BNFdef(2855, binding table reference value expression)
    alt(2856)
      group(2857)
        opt(2858)
          kw(2859, BINDING)
        kw(2860, TABLE)
        BNF(2861, binding table expression)
      BNF(2862, value expression primary)
  BNFdef(2863, node reference value expression)
    BNF(2864, value expression primary)
  BNFdef(2865, edge reference value expression)
    BNF(2866, value expression primary)
  BNFdef(2867, record expression)
    BNF(2868, value expression primary)
  BNFdef(2869, aggregating value expression)
    BNF(2870, value expression)
  BNFdef(2871, value expression primary)
    alt(2872)
      BNF(2873, parenthesized value expression)
      BNF(2874, non-parenthesized value expression primary)
  BNFdef(2875, parenthesized value expression)
    group(2876)
      BNF(2877, left paren)
      BNF(2878, value expression)
      BNF(2879, right paren)
  BNFdef(2880, non-parenthesized value expression primary)
    alt(2881)
      BNF(2882, non-parenthesized value expression primary special case)
      BNF(2883, binding variable reference)
  BNFdef(2884, non-parenthesized value expression primary special case)
    alt(2885)
      BNF(2886, aggregate function)
      BNF(2887, unsigned value specification)
      BNF(2888, list value constructor)
      BNF(2889, record constructor)
      BNF(2890, path value constructor)
      BNF(2891, property reference)
      BNF(2892, value query expression)
      BNF(2893, case expression)
      BNF(2894, cast specification)
      BNF(2895, element_id function)
      BNF(2896, let value expression)
  BNFdef(2897, value specification)
    alt(2898)
      BNF(2899, literal)
      BNF(2900, general value specification)
  BNFdef(2901, unsigned value specification)
    alt(2902)
      BNF(2903, unsigned literal)
      BNF(2904, general value specification)
  BNFdef(2905, non-negative integer specification)
    alt(2906)
      BNF(2907, unsigned integer)
      BNF(2908, dynamic parameter specification)
  BNFdef(2909, general value specification)
    alt(2910)
      BNF(2911, dynamic parameter specification)
      kw(2912, SESSION_USER)
  BNFdef(2913, dynamic parameter specification)
    BNF(2914, general parameter reference)
  BNFdef(2915, let value expression)
    group(2916)
      kw(2917, LET)
      BNF(2918, let variable definition list)
      kw(2919, IN)
      BNF(2920, value expression)
      kw(2921, END)
  BNFdef(2922, value query expression)
    group(2923)
      kw(2924, VALUE)
      BNF(2925, nested query specification)
  BNFdef(2926, case expression)
    alt(2927)
      BNF(2928, case abbreviation)
      BNF(2929, case specification)
  BNFdef(2930, case abbreviation)
    alt(2931)
      group(2932)
        kw(2933, NULLIF)
        BNF(2934, left paren)
        BNF(2935, value expression)
        BNF(2936, comma)
        BNF(2937, value expression)
        BNF(2938, right paren)
      group(2939)
        kw(2940, COALESCE)
        BNF(2941, left paren)
        BNF(2942, value expression)
        repeat(2943)
          group(2944)
            BNF(2945, comma)
            BNF(2946, value expression)
        BNF(2947, right paren)
  BNFdef(2948, case specification)
    alt(2949)
      BNF(2950, simple case)
      BNF(2951, searched case)
  BNFdef(2952, simple case)
    group(2953)
      kw(2954, CASE)
      repeat(2955)
        BNF(2956, simple when clause)
      opt(2957)
        BNF(2958, else clause)
      kw(2959, END)
  BNFdef(2960, searched case)
    group(2961)
      kw(2962, CASE)
      repeat(2963)
        BNF(2964, searched when clause)
      opt(2965)
        BNF(2966, else clause)
      kw(2967, END)
  BNFdef(2968, simple when clause)
    group(2969)
      kw(2970, WHEN)
      BNF(2971, when operand list)
      kw(2972, THEN)
      BNF(2973, result)
  BNFdef(2974, searched when clause)
    group(2975)
      kw(2976, WHEN)
      BNF(2977, search condition)
      kw(2978, THEN)
      BNF(2979, result)
  BNFdef(2980, else clause)
    group(2981)
      kw(2982, ELSE)
      BNF(2983, result)
  BNFdef(2984, case operand)
    alt(2985)
      BNF(2986, non-parenthesized value expression primary)
      BNF(2987, element variable reference)
  BNFdef(2988, when operand list)
    group(2989)
      BNF(2990, when operand)
      opt(2991)
        repeat(2992)
          group(2993)
            BNF(2994, comma)
            BNF(2995, when operand)
  BNFdef(2996, when operand)
    alt(2997)
      BNF(2998, non-parenthesized value expression primary)
      BNF(2999, comparison predicate part 2)
      BNF(3000, null predicate part 2)
      BNF(3001, value type predicate part 2)
      BNF(3002, normalized predicate part 2)
      BNF(3003, directed predicate part 2)
      BNF(3004, labeled predicate part 2)
      BNF(3005, source predicate part 2)
      BNF(3006, destination predicate part 2)
  BNFdef(3007, result)
    alt(3008)
      BNF(3009, result expression)
      BNF(3010, null literal)
  BNFdef(3011, result expression)
    BNF(3012, value expression)
  BNFdef(3013, cast specification)
    group(3014)
      kw(3015, CAST)
      BNF(3016, left paren)
      BNF(3017, cast operand)
      kw(3018, AS)
      BNF(3019, cast target)
      BNF(3020, right paren)
  BNFdef(3021, cast operand)
    alt(3022)
      BNF(3023, value expression)
      BNF(3024, null literal)
  BNFdef(3025, cast target)
    BNF(3026, value type)
  BNFdef(3027, aggregate function)
    alt(3028)
      group(3029)
        kw(3030, COUNT)
        BNF(3031, left paren)
        BNF(3032, asterisk)
        BNF(3033, right paren)
      BNF(3034, general set function)
      BNF(3035, binary set function)
  BNFdef(3036, general set function)
    group(3037)
      BNF(3038, general set function type)
      BNF(3039, left paren)
      opt(3040)
        BNF(3041, set quantifier)
      BNF(3042, value expression)
      BNF(3043, right paren)
  BNFdef(3044, binary set function)
    group(3045)
      BNF(3046, binary set function type)
      BNF(3047, left paren)
      BNF(3048, dependent value expression)
      BNF(3049, comma)
      BNF(3050, independent value expression)
      BNF(3051, right paren)
  BNFdef(3052, general set function type)
    alt(3053)
      kw(3054, AVG)
      kw(3055, COUNT)
      kw(3056, MAX)
      kw(3057, MIN)
      kw(3058, SUM)
      kw(3059, COLLECT_LIST)
      kw(3060, STDDEV_SAMP)
      kw(3061, STDDEV_POP)
  BNFdef(3062, set quantifier)
    alt(3063)
      kw(3064, DISTINCT)
      kw(3065, ALL)
  BNFdef(3066, binary set function type)
    alt(3067)
      kw(3068, PERCENTILE_CONT)
      kw(3069, PERCENTILE_DISC)
  BNFdef(3070, dependent value expression)
    group(3071)
      opt(3072)
        BNF(3073, set quantifier)
      BNF(3074, numeric value expression)
  BNFdef(3075, independent value expression)
    BNF(3076, numeric value expression)
  BNFdef(3077, element_id function)
    group(3078)
      kw(3079, ELEMENT_ID)
      BNF(3080, left paren)
      BNF(3081, element variable reference)
      BNF(3082, right paren)
  BNFdef(3083, property reference)
    group(3084)
      BNF(3085, property source)
      BNF(3086, period)
      BNF(3087, property name)
  BNFdef(3088, property source)
    alt(3089)
      BNF(3090, node reference value expression)
      BNF(3091, edge reference value expression)
      BNF(3092, record expression)
  BNFdef(3093, binding variable reference)
    BNF(3094, binding variable)
  BNFdef(3095, path value expression)
    alt(3096)
      BNF(3097, path value concatenation)
      BNF(3098, path value primary)
  BNFdef(3099, path value concatenation)
    group(3100)
      BNF(3101, path value expression 1)
      BNF(3102, concatenation operator)
      BNF(3103, path value primary)
  BNFdef(3104, path value expression 1)
    BNF(3105, path value expression)
  BNFdef(3106, path value primary)
    BNF(3107, value expression primary)
  BNFdef(3108, path value constructor)
    BNF(3109, path value constructor by enumeration)
  BNFdef(3110, path value constructor by enumeration)
    group(3111)
      kw(3112, PATH)
      BNF(3113, left bracket)
      BNF(3114, path element list)
      BNF(3115, right bracket)
  BNFdef(3116, path element list)
    group(3117)
      BNF(3118, path element list start)
      opt(3119)
        repeat(3120)
          BNF(3121, path element list step)
  BNFdef(3122, path element list start)
    BNF(3123, node reference value expression)
  BNFdef(3124, path element list step)
    group(3125)
      BNF(3126, comma)
      BNF(3127, edge reference value expression)
      BNF(3128, comma)
      BNF(3129, node reference value expression)
  BNFdef(3130, list value expression)
    alt(3131)
      BNF(3132, list concatenation)
      BNF(3133, list primary)
  BNFdef(3134, list concatenation)
    group(3135)
      BNF(3136, list value expression 1)
      BNF(3137, concatenation operator)
      BNF(3138, list primary)
  BNFdef(3139, list value expression 1)
    BNF(3140, list value expression)
  BNFdef(3141, list primary)
    alt(3142)
      BNF(3143, list value function)
      BNF(3144, value expression primary)
  BNFdef(3145, list value function)
    alt(3146)
      BNF(3147, trim list function)
      BNF(3148, elements function)
  BNFdef(3149, trim list function)
    group(3150)
      kw(3151, TRIM)
      BNF(3152, left paren)
      BNF(3153, list value expression)
      BNF(3154, comma)
      BNF(3155, numeric value expression)
      BNF(3156, right paren)
  BNFdef(3157, elements function)
    group(3158)
      kw(3159, ELEMENTS)
      BNF(3160, left paren)
      BNF(3161, path value expression)
      BNF(3162, right paren)
  BNFdef(3163, list value constructor)
    BNF(3164, list value constructor by enumeration)
  BNFdef(3165, list value constructor by enumeration)
    group(3166)
      opt(3167)
        BNF(3168, list value type name)
      BNF(3169, left bracket)
      opt(3170)
        BNF(3171, list element list)
      BNF(3172, right bracket)
  BNFdef(3173, list element list)
    group(3174)
      BNF(3175, list element)
      opt(3176)
        repeat(3177)
          group(3178)
            BNF(3179, comma)
            BNF(3180, list element)
  BNFdef(3181, list element)
    BNF(3182, value expression)
  BNFdef(3183, record constructor)
    group(3184)
      opt(3185)
        kw(3186, RECORD)
      BNF(3187, fields specification)
  BNFdef(3188, fields specification)
    group(3189)
      BNF(3190, left brace)
      opt(3191)
        BNF(3192, field list)
      BNF(3193, right brace)
  BNFdef(3194, field list)
    group(3195)
      BNF(3196, field)
      opt(3197)
        repeat(3198)
          group(3199)
            BNF(3200, comma)
            BNF(3201, field)
  BNFdef(3202, field)
    group(3203)
      BNF(3204, field name)
      BNF(3205, colon)
      BNF(3206, value expression)
  BNFdef(3207, boolean value expression)
    alt(3208)
      BNF(3209, boolean term)
      group(3210)
        BNF(3211, boolean value expression)
        kw(3212, OR)
        BNF(3213, boolean term)
      group(3214)
        BNF(3215, boolean value expression)
        kw(3216, XOR)
        BNF(3217, boolean term)
  BNFdef(3218, boolean term)
    alt(3219)
      BNF(3220, boolean factor)
      group(3221)
        BNF(3222, boolean term)
        kw(3223, AND)
        BNF(3224, boolean factor)
  BNFdef(3225, boolean factor)
    group(3226)
      opt(3227)
        kw(3228, NOT)
      BNF(3229, boolean test)
  BNFdef(3230, boolean test)
    group(3231)
      BNF(3232, boolean primary)
      opt(3233)
        kw(3234, IS)
        opt(3235)
          kw(3236, NOT)
        BNF(3237, truth value)
  BNFdef(3238, truth value)
    alt(3239)
      kw(3240, TRUE)
      kw(3241, FALSE)
      kw(3242, UNKNOWN)
  BNFdef(3243, boolean primary)
    alt(3244)
      BNF(3245, predicate)
      BNF(3246, boolean predicand)
  BNFdef(3247, boolean predicand)
    alt(3248)
      BNF(3249, parenthesized boolean value expression)
      BNF(3250, non-parenthesized value expression primary)
  BNFdef(3251, parenthesized boolean value expression)
    group(3252)
      BNF(3253, left paren)
      BNF(3254, boolean value expression)
      BNF(3255, right paren)
  BNFdef(3256, numeric value expression)
    alt(3257)
      BNF(3258, term)
      group(3259)
        BNF(3260, numeric value expression)
        BNF(3261, plus sign)
        BNF(3262, term)
      group(3263)
        BNF(3264, numeric value expression)
        BNF(3265, minus sign)
        BNF(3266, term)
  BNFdef(3267, term)
    alt(3268)
      BNF(3269, factor)
      group(3270)
        BNF(3271, term)
        BNF(3272, asterisk)
        BNF(3273, factor)
      group(3274)
        BNF(3275, term)
        BNF(3276, solidus)
        BNF(3277, factor)
  BNFdef(3278, factor)
    group(3279)
      opt(3280)
        BNF(3281, sign)
      BNF(3282, numeric primary)
  BNFdef(3283, numeric primary)
    alt(3284)
      BNF(3285, value expression primary)
      BNF(3286, numeric value function)
  BNFdef(3287, numeric value function)
    alt(3288)
      BNF(3289, length expression)
      BNF(3290, cardinality expression)
      BNF(3291, absolute value expression)
      BNF(3292, modulus expression)
      BNF(3293, trigonometric function)
      BNF(3294, general logarithm function)
      BNF(3295, common logarithm)
      BNF(3296, natural logarithm)
      BNF(3297, exponential function)
      BNF(3298, power function)
      BNF(3299, square root)
      BNF(3300, floor function)
      BNF(3301, ceiling function)
  BNFdef(3302, length expression)
    alt(3303)
      BNF(3304, char length expression)
      BNF(3305, byte length expression)
      BNF(3306, path length expression)
  BNFdef(3307, cardinality expression)
    alt(3308)
      group(3309)
        kw(3310, CARDINALITY)
        BNF(3311, left paren)
        BNF(3312, cardinality expression argument)
        BNF(3313, right paren)
      group(3314)
        kw(3315, SIZE)
        BNF(3316, left paren)
        BNF(3317, list value expression)
        BNF(3318, right paren)
  BNFdef(3319, cardinality expression argument)
    alt(3320)
      BNF(3321, binding table reference value expression)
      BNF(3322, path value expression)
      BNF(3323, list value expression)
      BNF(3324, record expression)
  BNFdef(3325, char length expression)
    group(3326)
      group(3327)
        alt(3328)
          kw(3329, CHAR_LENGTH)
          kw(3330, CHARACTER_LENGTH)
      BNF(3331, left paren)
      BNF(3332, character string value expression)
      BNF(3333, right paren)
  BNFdef(3334, byte length expression)
    group(3335)
      group(3336)
        alt(3337)
          kw(3338, BYTE_LENGTH)
          kw(3339, OCTET_LENGTH)
      BNF(3340, left paren)
      BNF(3341, byte string value expression)
      BNF(3342, right paren)
  BNFdef(3343, path length expression)
    group(3344)
      kw(3345, PATH_LENGTH)
      BNF(3346, left paren)
      BNF(3347, path value expression)
      BNF(3348, right paren)
  BNFdef(3349, absolute value expression)
    group(3350)
      kw(3351, ABS)
      BNF(3352, left paren)
      BNF(3353, numeric value expression)
      BNF(3354, right paren)
  BNFdef(3355, modulus expression)
    group(3356)
      kw(3357, MOD)
      BNF(3358, left paren)
      BNF(3359, numeric value expression dividend)
      BNF(3360, comma)
      BNF(3361, numeric value expression divisor)
      BNF(3362, right paren)
  BNFdef(3363, numeric value expression dividend)
    BNF(3364, numeric value expression)
  BNFdef(3365, numeric value expression divisor)
    BNF(3366, numeric value expression)
  BNFdef(3367, trigonometric function)
    group(3368)
      BNF(3369, trigonometric function name)
      BNF(3370, left paren)
      BNF(3371, numeric value expression)
      BNF(3372, right paren)
  BNFdef(3373, trigonometric function name)
    alt(3374)
      kw(3375, SIN)
      kw(3376, COS)
      kw(3377, TAN)
      kw(3378, COT)
      kw(3379, SINH)
      kw(3380, COSH)
      kw(3381, TANH)
      kw(3382, ASIN)
      kw(3383, ACOS)
      kw(3384, ATAN)
      kw(3385, DEGREES)
      kw(3386, RADIANS)
  BNFdef(3387, general logarithm function)
    group(3388)
      kw(3389, LOG)
      BNF(3390, left paren)
      BNF(3391, general logarithm base)
      BNF(3392, comma)
      BNF(3393, general logarithm argument)
      BNF(3394, right paren)
  BNFdef(3395, general logarithm base)
    BNF(3396, numeric value expression)
  BNFdef(3397, general logarithm argument)
    BNF(3398, numeric value expression)
  BNFdef(3399, common logarithm)
    group(3400)
      kw(3401, LOG10)
      BNF(3402, left paren)
      BNF(3403, numeric value expression)
      BNF(3404, right paren)
  BNFdef(3405, natural logarithm)
    group(3406)
      kw(3407, LN)
      BNF(3408, left paren)
      BNF(3409, numeric value expression)
      BNF(3410, right paren)
  BNFdef(3411, exponential function)
    group(3412)
      kw(3413, EXP)
      BNF(3414, left paren)
      BNF(3415, numeric value expression)
      BNF(3416, right paren)
  BNFdef(3417, power function)
    group(3418)
      kw(3419, POWER)
      BNF(3420, left paren)
      BNF(3421, numeric value expression base)
      BNF(3422, comma)
      BNF(3423, numeric value expression exponent)
      BNF(3424, right paren)
  BNFdef(3425, numeric value expression base)
    BNF(3426, numeric value expression)
  BNFdef(3427, numeric value expression exponent)
    BNF(3428, numeric value expression)
  BNFdef(3429, square root)
    group(3430)
      kw(3431, SQRT)
      BNF(3432, left paren)
      BNF(3433, numeric value expression)
      BNF(3434, right paren)
  BNFdef(3435, floor function)
    group(3436)
      kw(3437, FLOOR)
      BNF(3438, left paren)
      BNF(3439, numeric value expression)
      BNF(3440, right paren)
  BNFdef(3441, ceiling function)
    group(3442)
      group(3443)
        alt(3444)
          kw(3445, CEIL)
          kw(3446, CEILING)
      BNF(3447, left paren)
      BNF(3448, numeric value expression)
      BNF(3449, right paren)
  BNFdef(3450, string value expression)
    alt(3451)
      BNF(3452, character string value expression)
      BNF(3453, byte string value expression)
  BNFdef(3454, character string value expression)
    alt(3455)
      BNF(3456, character string concatenation)
      BNF(3457, character string primary)
  BNFdef(3458, character string concatenation)
    group(3459)
      BNF(3460, character string value expression)
      BNF(3461, concatenation operator)
      BNF(3462, character string primary)
  BNFdef(3463, character string primary)
    alt(3464)
      BNF(3465, value expression primary)
      BNF(3466, character string function)
  BNFdef(3467, byte string value expression)
    alt(3468)
      BNF(3469, byte string concatenation)
      BNF(3470, byte string primary)
  BNFdef(3471, byte string primary)
    alt(3472)
      BNF(3473, value expression primary)
      BNF(3474, byte string function)
  BNFdef(3475, byte string concatenation)
    group(3476)
      BNF(3477, byte string value expression)
      BNF(3478, concatenation operator)
      BNF(3479, byte string primary)
  BNFdef(3480, character string function)
    alt(3481)
      BNF(3482, substring function)
      BNF(3483, fold)
      BNF(3484, trim function)
      BNF(3485, normalize function)
  BNFdef(3486, substring function)
    group(3487)
      group(3488)
        alt(3489)
          kw(3490, LEFT)
          kw(3491, RIGHT)
      BNF(3492, left paren)
      BNF(3493, character string value expression)
      BNF(3494, comma)
      BNF(3495, string length)
      BNF(3496, right paren)
  BNFdef(3497, fold)
    group(3498)
      group(3499)
        alt(3500)
          kw(3501, UPPER)
          kw(3502, LOWER)
      BNF(3503, left paren)
      BNF(3504, character string value expression)
      BNF(3505, right paren)
  BNFdef(3506, trim function)
    alt(3507)
      BNF(3508, single-character trim function)
      BNF(3509, multi-character trim function)
  BNFdef(3510, single-character trim function)
    group(3511)
      kw(3512, TRIM)
      BNF(3513, left paren)
      BNF(3514, trim operands)
      BNF(3515, right paren)
  BNFdef(3516, multi-character trim function)
    group(3517)
      group(3518)
        alt(3519)
          kw(3520, BTRIM)
          kw(3521, LTRIM)
          kw(3522, RTRIM)
      BNF(3523, left paren)
      BNF(3524, trim source)
      opt(3525)
        BNF(3526, comma)
        BNF(3527, trim character string)
      BNF(3528, right paren)
  BNFdef(3529, trim operands)
    group(3530)
      opt(3531)
        opt(3532)
          BNF(3533, trim specification)
        opt(3534)
          BNF(3535, trim character string)
        kw(3536, FROM)
      BNF(3537, trim source)
  BNFdef(3538, trim source)
    BNF(3539, character string value expression)
  BNFdef(3540, trim specification)
    alt(3541)
      kw(3542, LEADING)
      kw(3543, TRAILING)
      kw(3544, BOTH)
  BNFdef(3545, trim character string)
    BNF(3546, character string value expression)
  BNFdef(3547, normalize function)
    group(3548)
      kw(3549, NORMALIZE)
      BNF(3550, left paren)
      BNF(3551, character string value expression)
      opt(3552)
        BNF(3553, comma)
        BNF(3554, normal form)
      BNF(3555, right paren)
  BNFdef(3556, normal form)
    alt(3557)
      kw(3558, NFC)
      kw(3559, NFD)
      kw(3560, NFKC)
      kw(3561, NFKD)
  BNFdef(3562, string length)
    BNF(3563, numeric value expression)
  BNFdef(3564, byte string function)
    alt(3565)
      BNF(3566, byte string substring function)
      BNF(3567, byte string trim function)
  BNFdef(3568, byte string substring function)
    group(3569)
      group(3570)
        alt(3571)
          kw(3572, LEFT)
          kw(3573, RIGHT)
      BNF(3574, left paren)
      BNF(3575, byte string value expression)
      BNF(3576, comma)
      BNF(3577, string length)
      BNF(3578, right paren)
  BNFdef(3579, byte string trim function)
    group(3580)
      kw(3581, TRIM)
      BNF(3582, left paren)
      BNF(3583, byte string trim operands)
      BNF(3584, right paren)
  BNFdef(3585, byte string trim operands)
    group(3586)
      opt(3587)
        opt(3588)
          BNF(3589, trim specification)
        opt(3590)
          BNF(3591, trim byte string)
        kw(3592, FROM)
      BNF(3593, byte string trim source)
  BNFdef(3594, byte string trim source)
    BNF(3595, byte string value expression)
  BNFdef(3596, trim byte string)
    BNF(3597, byte string value expression)
  BNFdef(3598, datetime value expression)
    alt(3599)
      BNF(3600, datetime primary)
      group(3601)
        BNF(3602, duration value expression)
        BNF(3603, plus sign)
        BNF(3604, datetime primary)
      group(3605)
        BNF(3606, datetime value expression)
        BNF(3607, plus sign)
        BNF(3608, duration term)
      group(3609)
        BNF(3610, datetime value expression)
        BNF(3611, minus sign)
        BNF(3612, duration term)
  BNFdef(3613, datetime primary)
    alt(3614)
      BNF(3615, value expression primary)
      BNF(3616, datetime value function)
  BNFdef(3617, datetime value function)
    alt(3618)
      BNF(3619, date function)
      BNF(3620, time function)
      BNF(3621, datetime function)
      BNF(3622, localtime function)
      BNF(3623, localdatetime function)
  BNFdef(3624, date function)
    alt(3625)
      kw(3626, CURRENT_DATE)
      group(3627)
        kw(3628, DATE)
        BNF(3629, left paren)
        opt(3630)
          BNF(3631, date function parameters)
        BNF(3632, right paren)
  BNFdef(3633, time function)
    alt(3634)
      kw(3635, CURRENT_TIME)
      group(3636)
        kw(3637, ZONED_TIME)
        BNF(3638, left paren)
        opt(3639)
          BNF(3640, time function parameters)
        BNF(3641, right paren)
  BNFdef(3642, localtime function)
    group(3643)
      kw(3644, LOCAL_TIME)
      opt(3645)
        BNF(3646, left paren)
        opt(3647)
          BNF(3648, time function parameters)
        BNF(3649, right paren)
  BNFdef(3650, datetime function)
    alt(3651)
      kw(3652, CURRENT_TIMESTAMP)
      group(3653)
        kw(3654, ZONED_DATETIME)
        BNF(3655, left paren)
        opt(3656)
          BNF(3657, datetime function parameters)
        BNF(3658, right paren)
  BNFdef(3659, localdatetime function)
    alt(3660)
      kw(3661, LOCAL_TIMESTAMP)
      group(3662)
        kw(3663, LOCAL_DATETIME)
        BNF(3664, left paren)
        opt(3665)
          BNF(3666, datetime function parameters)
        BNF(3667, right paren)
  BNFdef(3668, date function parameters)
    alt(3669)
      BNF(3670, date string)
      BNF(3671, record constructor)
  BNFdef(3672, time function parameters)
    alt(3673)
      BNF(3674, time string)
      BNF(3675, record constructor)
  BNFdef(3676, datetime function parameters)
    alt(3677)
      BNF(3678, datetime string)
      BNF(3679, record constructor)
  BNFdef(3680, duration value expression)
    alt(3681)
      BNF(3682, duration term)
      BNF(3683, duration addition and subtraction)
      BNF(3684, datetime subtraction)
  BNFdef(3685, duration addition and subtraction)
    alt(3686)
      group(3687)
        BNF(3688, duration value expression 1)
        BNF(3689, plus sign)
        BNF(3690, duration term 1)
      group(3691)
        BNF(3692, duration value expression 1)
        BNF(3693, minus sign)
        BNF(3694, duration term 1)
  BNFdef(3695, datetime subtraction)
    group(3696)
      kw(3697, DURATION_BETWEEN)
      BNF(3698, left paren)
      BNF(3699, datetime subtraction parameters)
      BNF(3700, right paren)
      opt(3701)
        BNF(3702, temporal duration qualifier)
  BNFdef(3703, datetime subtraction parameters)
    group(3704)
      BNF(3705, datetime value expression 1)
      BNF(3706, comma)
      BNF(3707, datetime value expression 2)
  BNFdef(3708, duration term)
    alt(3709)
      BNF(3710, duration factor)
      group(3711)
        BNF(3712, duration term 2)
        BNF(3713, asterisk)
        BNF(3714, factor)
      group(3715)
        BNF(3716, duration term 2)
        BNF(3717, solidus)
        BNF(3718, factor)
      group(3719)
        BNF(3720, term)
        BNF(3721, asterisk)
        BNF(3722, duration factor)
  BNFdef(3723, duration factor)
    group(3724)
      opt(3725)
        BNF(3726, sign)
      BNF(3727, duration primary)
  BNFdef(3728, duration primary)
    alt(3729)
      BNF(3730, value expression primary)
      BNF(3731, duration value function)
  BNFdef(3732, duration value expression 1)
    BNF(3733, duration value expression)
  BNFdef(3734, duration term 1)
    BNF(3735, duration term)
  BNFdef(3736, duration term 2)
    BNF(3737, duration term)
  BNFdef(3738, datetime value expression 1)
    BNF(3739, datetime value expression)
  BNFdef(3740, datetime value expression 2)
    BNF(3741, datetime value expression)
  BNFdef(3742, duration value function)
    alt(3743)
      BNF(3744, duration function)
      BNF(3745, duration absolute value function)
  BNFdef(3746, duration function)
    group(3747)
      kw(3748, DURATION)
      BNF(3749, left paren)
      BNF(3750, duration function parameters)
      BNF(3751, right paren)
  BNFdef(3752, duration function parameters)
    alt(3753)
      BNF(3754, duration string)
      BNF(3755, record constructor)
  BNFdef(3756, duration absolute value function)
    group(3757)
      kw(3758, ABS)
      BNF(3759, left paren)
      BNF(3760, duration value expression)
      BNF(3761, right paren)
  BNFdef(3762, authorization identifier)
    BNF(3763, identifier)
  BNFdef(3764, object name)
    BNF(3765, identifier)
  BNFdef(3766, object name or binding variable)
    BNF(3767, regular identifier)
  BNFdef(3768, directory name)
    BNF(3769, identifier)
  BNFdef(3770, schema name)
    BNF(3771, identifier)
  BNFdef(3772, graph name)
    alt(3773)
      BNF(3774, regular identifier)
      BNF(3775, delimited graph name)
  BNFdef(3776, delimited graph name)
    BNF(3777, delimited identifier)
  BNFdef(3778, graph type name)
    BNF(3779, identifier)
  BNFdef(3780, node type name)
    BNF(3781, identifier)
  BNFdef(3782, edge type name)
    BNF(3783, identifier)
  BNFdef(3784, binding table name)
    alt(3785)
      BNF(3786, regular identifier)
      BNF(3787, delimited binding table name)
  BNFdef(3788, delimited binding table name)
    BNF(3789, delimited identifier)
  BNFdef(3790, procedure name)
    BNF(3791, identifier)
  BNFdef(3792, label name)
    BNF(3793, identifier)
  BNFdef(3794, property name)
    BNF(3795, identifier)
  BNFdef(3796, field name)
    BNF(3797, identifier)
  BNFdef(3798, parameter name)
    BNF(3799, separated identifier)
  BNFdef(3800, graph pattern variable)
    alt(3801)
      BNF(3802, element variable)
      BNF(3803, path or subpath variable)
  BNFdef(3804, path or subpath variable)
    alt(3805)
      BNF(3806, path variable)
      BNF(3807, subpath variable)
  BNFdef(3808, element variable)
    BNF(3809, binding variable)
  BNFdef(3810, path variable)
    BNF(3811, binding variable)
  BNFdef(3812, subpath variable)
    BNF(3813, regular identifier)
  BNFdef(3814, binding variable)
    BNF(3815, regular identifier)
  BNFdef(3816, literal)
    alt(3817)
      BNF(3818, signed numeric literal)
      BNF(3819, general literal)
  BNFdef(3820, unsigned literal)
    alt(3821)
      BNF(3822, unsigned numeric literal)
      BNF(3823, general literal)
  BNFdef(3824, general literal)
    alt(3825)
      BNF(3826, boolean literal)
      BNF(3827, character string literal)
      BNF(3828, byte string literal)
      BNF(3829, temporal literal)
      BNF(3830, duration literal)
      BNF(3831, null literal)
      BNF(3832, list literal)
      BNF(3833, record literal)
  BNFdef(3834, boolean literal)
    alt(3835)
      kw(3836, TRUE)
      kw(3837, FALSE)
      kw(3838, UNKNOWN)
  BNFdef(3839, character string literal)
    alt(3840)
      BNF(3841, single quoted character sequence)
      BNF(3842, double quoted character sequence)
  BNFdef(3843, single quoted character sequence)
    group(3844)
      opt(3845)
        BNF(3846, no escape)
      BNF(3847, unbroken single quoted character sequence)
  BNFdef(3848, double quoted character sequence)
    group(3849)
      opt(3850)
        BNF(3851, no escape)
      BNF(3852, unbroken double quoted character sequence)
  BNFdef(3853, accent quoted character sequence)
    group(3854)
      opt(3855)
        BNF(3856, no escape)
      BNF(3857, unbroken accent quoted character sequence)
  BNFdef(3858, no escape)
    BNF(3859, commercial at)
  BNFdef(3860, unbroken single quoted character sequence)
    group(3861)
      BNF(3862, quote)
      opt(3863)
        repeat(3864)
          BNF(3865, single quoted character representation)
      BNF(3866, quote)
  BNFdef(3867, unbroken double quoted character sequence)
    group(3868)
      BNF(3869, double quote)
      opt(3870)
        repeat(3871)
          BNF(3872, double quoted character representation)
      BNF(3873, double quote)
  BNFdef(3874, unbroken accent quoted character sequence)
    group(3875)
      BNF(3876, grave accent)
      opt(3877)
        repeat(3878)
          BNF(3879, accent quoted character representation)
      BNF(3880, grave accent)
  BNFdef(3881, single quoted character representation)
    alt(3882)
      BNF(3883, character representation)
      BNF(3884, double single quote)
  BNFdef(3885, double quoted character representation)
    alt(3886)
      BNF(3887, character representation)
      BNF(3888, double double quote)
  BNFdef(3889, accent quoted character representation)
    alt(3890)
      BNF(3891, character representation)
      BNF(3892, double grave accent)
  BNFdef(3893, character representation)
    group(3894)
  BNFdef(3895, double single quote)
    group(3896)
      BNF(3897, quote)
      BNF(3898, quote)
  BNFdef(3899, double double quote)
    group(3900)
      BNF(3901, double quote)
      BNF(3902, double quote)
  BNFdef(3903, double grave accent)
    group(3904)
      BNF(3905, grave accent)
      BNF(3906, grave accent)
  BNFdef(3907, string literal character)
    group(3908)
  BNFdef(3909, escaped character)
    alt(3910)
      BNF(3911, escaped reverse solidus)
      BNF(3912, escaped quote)
      BNF(3913, escaped double quote)
      BNF(3914, escaped grave accent)
      BNF(3915, escaped tab)
      BNF(3916, escaped backspace)
      BNF(3917, escaped newline)
      BNF(3918, escaped carriage return)
      BNF(3919, escaped form feed)
      BNF(3920, unicode escape value)
  BNFdef(3921, escaped reverse solidus)
    group(3922)
      BNF(3923, reverse solidus)
      BNF(3924, reverse solidus)
  BNFdef(3925, escaped quote)
    group(3926)
      BNF(3927, reverse solidus)
      BNF(3928, quote)
  BNFdef(3929, escaped double quote)
    group(3930)
      BNF(3931, reverse solidus)
      BNF(3932, double quote)
  BNFdef(3933, escaped grave accent)
    group(3934)
      BNF(3935, reverse solidus)
      BNF(3936, grave accent)
  BNFdef(3937, escaped tab)
    group(3938)
      BNF(3939, reverse solidus)
      terminalsymbol(3940)
  BNFdef(3941, escaped backspace)
    group(3942)
      BNF(3943, reverse solidus)
      terminalsymbol(3944)
  BNFdef(3945, escaped newline)
    group(3946)
      BNF(3947, reverse solidus)
      terminalsymbol(3948)
  BNFdef(3949, escaped carriage return)
    group(3950)
      BNF(3951, reverse solidus)
      terminalsymbol(3952)
  BNFdef(3953, escaped form feed)
    group(3954)
      BNF(3955, reverse solidus)
      terminalsymbol(3956)
  BNFdef(3957, unicode escape value)
    alt(3958)
      BNF(3959, unicode 4 digit escape value)
      BNF(3960, unicode 6 digit escape value)
  BNFdef(3961, unicode 4 digit escape value)
    group(3962)
      BNF(3963, reverse solidus)
      terminalsymbol(3964)
      BNF(3965, hex digit)
      BNF(3966, hex digit)
      BNF(3967, hex digit)
      BNF(3968, hex digit)
  BNFdef(3969, unicode 6 digit escape value)
    group(3970)
      BNF(3971, reverse solidus)
      terminalsymbol(3972)
      BNF(3973, hex digit)
      BNF(3974, hex digit)
      BNF(3975, hex digit)
      BNF(3976, hex digit)
      BNF(3977, hex digit)
      BNF(3978, hex digit)
  BNFdef(3979, byte string literal)
    group(3980)
      terminalsymbol(3981)
      BNF(3982, quote)
      opt(3983)
        repeat(3984)
          BNF(3985, space)
      opt(3986)
        repeat(3987)
          group(3988)
            BNF(3989, hex digit)
            opt(3990)
              repeat(3991)
                BNF(3992, space)
            BNF(3993, hex digit)
            opt(3994)
              repeat(3995)
                BNF(3996, space)
      BNF(3997, quote)
      opt(3998)
        repeat(3999)
          group(4000)
            BNF(4001, separator)
            BNF(4002, quote)
            opt(4003)
              repeat(4004)
                BNF(4005, space)
            opt(4006)
              repeat(4007)
                group(4008)
                  BNF(4009, hex digit)
                  opt(4010)
                    repeat(4011)
                      BNF(4012, space)
                  BNF(4013, hex digit)
                  opt(4014)
                    repeat(4015)
                      BNF(4016, space)
            BNF(4017, quote)
  BNFdef(4018, signed numeric literal)
    group(4019)
      opt(4020)
        BNF(4021, sign)
      BNF(4022, unsigned numeric literal)
  BNFdef(4023, sign)
    alt(4024)
      BNF(4025, plus sign)
      BNF(4026, minus sign)
  BNFdef(4027, unsigned numeric literal)
    alt(4028)
      BNF(4029, exact numeric literal)
      BNF(4030, approximate numeric literal)
  BNFdef(4031, exact numeric literal)
    alt(4032)
      group(4033)
        BNF(4034, unsigned decimal in scientific notation)
        BNF(4035, exact number suffix)
      group(4036)
        BNF(4037, unsigned decimal in common notation)
        opt(4038)
          BNF(4039, exact number suffix)
      group(4040)
        BNF(4041, unsigned decimal integer)
        BNF(4042, exact number suffix)
      BNF(4043, unsigned integer)
  BNFdef(4044, exact number suffix)
    terminalsymbol(4045)
  BNFdef(4046, unsigned decimal in scientific notation)
    group(4047)
      BNF(4048, mantissa)
      terminalsymbol(4049)
      BNF(4050, exponent)
  BNFdef(4051, mantissa)
    alt(4052)
      BNF(4053, unsigned decimal in common notation)
      BNF(4054, unsigned decimal integer)
  BNFdef(4055, exponent)
    BNF(4056, signed decimal integer)
  BNFdef(4057, unsigned decimal in common notation)
    alt(4058)
      group(4059)
        BNF(4060, unsigned decimal integer)
        group(4061)
          BNF(4062, period)
          opt(4063)
            BNF(4064, unsigned decimal integer)
      group(4065)
        BNF(4066, period)
        BNF(4067, unsigned decimal integer)
  BNFdef(4068, unsigned integer)
    alt(4069)
      BNF(4070, unsigned decimal integer)
      BNF(4071, unsigned hexadecimal integer)
      BNF(4072, unsigned octal integer)
      BNF(4073, unsigned binary integer)
  BNFdef(4074, signed decimal integer)
    group(4075)
      opt(4076)
        BNF(4077, sign)
      BNF(4078, unsigned decimal integer)
  BNFdef(4079, unsigned decimal integer)
    group(4080)
      BNF(4081, digit)
      opt(4082)
        repeat(4083)
          group(4084)
            opt(4085)
              BNF(4086, underscore)
            BNF(4087, digit)
  BNFdef(4088, unsigned hexadecimal integer)
    group(4089)
      terminalsymbol(4090)
      repeat(4091)
        group(4092)
          opt(4093)
            BNF(4094, underscore)
          BNF(4095, hex digit)
  BNFdef(4096, unsigned octal integer)
    group(4097)
      terminalsymbol(4098)
      repeat(4099)
        group(4100)
          opt(4101)
            BNF(4102, underscore)
          BNF(4103, octal digit)
  BNFdef(4104, unsigned binary integer)
    group(4105)
      terminalsymbol(4106)
      repeat(4107)
        group(4108)
          opt(4109)
            BNF(4110, underscore)
          BNF(4111, binary digit)
  BNFdef(4112, approximate numeric literal)
    alt(4113)
      group(4114)
        BNF(4115, unsigned decimal in scientific notation)
        opt(4116)
          BNF(4117, approximate number suffix)
      group(4118)
        BNF(4119, unsigned decimal in common notation)
        BNF(4120, approximate number suffix)
      group(4121)
        BNF(4122, unsigned decimal integer)
        BNF(4123, approximate number suffix)
  BNFdef(4124, approximate number suffix)
    alt(4125)
      terminalsymbol(4126)
      terminalsymbol(4127)
  BNFdef(4128, temporal literal)
    alt(4129)
      BNF(4130, date literal)
      BNF(4131, time literal)
      BNF(4132, datetime literal)
      BNF(4133, SQL-datetime literal)
  BNFdef(4134, date literal)
    group(4135)
      kw(4136, DATE)
      BNF(4137, date string)
  BNFdef(4138, time literal)
    group(4139)
      kw(4140, TIME)
      BNF(4141, time string)
  BNFdef(4142, datetime literal)
    group(4143)
      group(4144)
        alt(4145)
          kw(4146, DATETIME)
          kw(4147, TIMESTAMP)
      BNF(4148, datetime string)
  BNFdef(4149, date string)
    BNF(4150, character string literal)
  BNFdef(4151, time string)
    BNF(4152, character string literal)
  BNFdef(4153, datetime string)
    BNF(4154, character string literal)
  BNFdef(4155, time zone string)
    BNF(4156, character string literal)
  BNFdef(4157, SQL-datetime literal)
    group(4158)
  BNFdef(4159, duration literal)
    alt(4160)
      group(4161)
        kw(4162, DURATION)
        BNF(4163, duration string)
      BNF(4164, SQL-interval literal)
  BNFdef(4165, duration string)
    BNF(4166, character string literal)
  BNFdef(4167, iso8601 years and months)
    group(4168)
      terminalsymbol(4169)
      opt(4170)
        BNF(4171, iso8601 years)
      opt(4172)
        BNF(4173, iso8601 months)
  BNFdef(4174, iso8601 years)
    group(4175)
      BNF(4176, iso8601 sint)
      terminalsymbol(4177)
  BNFdef(4178, iso8601 months)
    group(4179)
      BNF(4180, iso8601 sint)
      terminalsymbol(4181)
  BNFdef(4182, iso8601 days)
    group(4183)
      BNF(4184, iso8601 sint)
      terminalsymbol(4185)
  BNFdef(4186, iso8601 days and time)
    group(4187)
      terminalsymbol(4188)
      opt(4189)
        BNF(4190, iso8601 days)
      terminalsymbol(4191)
      opt(4192)
        BNF(4193, iso8601 hours)
      opt(4194)
        BNF(4195, iso8601 minutes)
      opt(4196)
        BNF(4197, iso8601 seconds)
  BNFdef(4198, iso8601 hours)
    group(4199)
      BNF(4200, iso8601 sint)
      terminalsymbol(4201)
  BNFdef(4202, iso8601 minutes)
    group(4203)
      BNF(4204, iso8601 sint)
      terminalsymbol(4205)
  BNFdef(4206, iso8601 seconds)
    group(4207)
      BNF(4208, iso8601 sint)
      opt(4209)
        BNF(4210, period)
        BNF(4211, iso8601 uint)
      terminalsymbol(4212)
  BNFdef(4213, iso8601 sint)
    group(4214)
      opt(4215)
        BNF(4216, minus sign)
      BNF(4217, unsigned decimal integer)
  BNFdef(4218, iso8601 uint)
    BNF(4219, unsigned decimal integer)
  BNFdef(4220, SQL-interval literal)
    group(4221)
  BNFdef(4222, null literal)
    kw(4223, NULL)
  BNFdef(4224, list literal)
    BNF(4225, list value constructor by enumeration)
  BNFdef(4226, record literal)
    BNF(4227, record constructor)
  BNFdef(4228, token)
    alt(4229)
      BNF(4230, non-delimiter token)
      BNF(4231, delimiter token)
  BNFdef(4232, non-delimiter token)
    alt(4233)
      BNF(4234, regular identifier)
      BNF(4235, substituted parameter reference)
      BNF(4236, general parameter reference)
      BNF(4237, keyword)
      BNF(4238, unsigned numeric literal)
      BNF(4239, byte string literal)
      BNF(4240, multiset alternation operator)
  BNFdef(4241, identifier)
    alt(4242)
      BNF(4243, regular identifier)
      BNF(4244, delimited identifier)
  BNFdef(4245, separated identifier)
    alt(4246)
      BNF(4247, extended identifier)
      BNF(4248, delimited identifier)
  BNFdef(4249, non-delimited identifier)
    alt(4250)
      BNF(4251, regular identifier)
      BNF(4252, extended identifier)
  BNFdef(4253, regular identifier)
    group(4254)
      BNF(4255, identifier start)
      opt(4256)
        repeat(4257)
          BNF(4258, identifier extend)
  BNFdef(4259, extended identifier)
    repeat(4260)
      BNF(4261, identifier extend)
  BNFdef(4262, delimited identifier)
    alt(4263)
      BNF(4264, double quoted character sequence)
      BNF(4265, accent quoted character sequence)
  BNFdef(4266, identifier start)
    group(4267)
  BNFdef(4268, identifier extend)
    group(4269)
  BNFdef(4270, substituted parameter reference)
    group(4271)
      BNF(4272, double dollar sign)
      BNF(4273, parameter name)
  BNFdef(4274, general parameter reference)
    group(4275)
      BNF(4276, dollar sign)
      BNF(4277, parameter name)
  BNFdef(4278, keyword)
    alt(4279)
      BNF(4280, reserved word)
      BNF(4281, non-reserved word)
  BNFdef(4282, reserved word)
    alt(4283)
      BNF(4284, pre-reserved word)
      kw(4285, ABS)
      kw(4286, ACOS)
      kw(4287, ALL)
      kw(4288, ALL_DIFFERENT)
      kw(4289, AND)
      kw(4290, ANY)
      kw(4291, ARRAY)
      kw(4292, AS)
      kw(4293, ASC)
      kw(4294, ASCENDING)
      kw(4295, ASIN)
      kw(4296, AT)
      kw(4297, ATAN)
      kw(4298, AVG)
      kw(4299, BIG)
      kw(4300, BIGINT)
      kw(4301, BINARY)
      kw(4302, BOOL)
      kw(4303, BOOLEAN)
      kw(4304, BOTH)
      kw(4305, BTRIM)
      kw(4306, BY)
      kw(4307, BYTE_LENGTH)
      kw(4308, BYTES)
      kw(4309, CALL)
      kw(4310, CARDINALITY)
      kw(4311, CASE)
      kw(4312, CAST)
      kw(4313, CEIL)
      kw(4314, CEILING)
      kw(4315, CHAR)
      kw(4316, CHAR_LENGTH)
      kw(4317, CHARACTER_LENGTH)
      kw(4318, CHARACTERISTICS)
      kw(4319, CLOSE)
      kw(4320, COALESCE)
      kw(4321, COLLECT_LIST)
      kw(4322, COMMIT)
      kw(4323, COPY)
      kw(4324, COS)
      kw(4325, COSH)
      kw(4326, COT)
      kw(4327, COUNT)
      kw(4328, CREATE)
      kw(4329, CURRENT_DATE)
      kw(4330, CURRENT_GRAPH)
      kw(4331, CURRENT_PROPERTY_GRAPH)
      kw(4332, CURRENT_SCHEMA)
      kw(4333, CURRENT_TIME)
      kw(4334, CURRENT_TIMESTAMP)
      kw(4335, DATE)
      kw(4336, DATETIME)
      kw(4337, DAY)
      kw(4338, DEC)
      kw(4339, DECIMAL)
      kw(4340, DEGREES)
      kw(4341, DELETE)
      kw(4342, DESC)
      kw(4343, DESCENDING)
      kw(4344, DETACH)
      kw(4345, DISTINCT)
      kw(4346, DOUBLE)
      kw(4347, DROP)
      kw(4348, DURATION)
      kw(4349, DURATION_BETWEEN)
      kw(4350, ELEMENT_ID)
      kw(4351, ELSE)
      kw(4352, END)
      kw(4353, EXCEPT)
      kw(4354, EXISTS)
      kw(4355, EXP)
      kw(4356, FALSE)
      kw(4357, FILTER)
      kw(4358, FINISH)
      kw(4359, FLOAT)
      kw(4360, FLOAT16)
      kw(4361, FLOAT32)
      kw(4362, FLOAT64)
      kw(4363, FLOAT128)
      kw(4364, FLOAT256)
      kw(4365, FLOOR)
      kw(4366, FOR)
      kw(4367, FROM)
      kw(4368, GROUP)
      kw(4369, HAVING)
      kw(4370, HOME_GRAPH)
      kw(4371, HOME_PROPERTY_GRAPH)
      kw(4372, HOME_SCHEMA)
      kw(4373, HOUR)
      kw(4374, IF)
      kw(4375, IMPLIES)
      kw(4376, IN)
      kw(4377, INSERT)
      kw(4378, INT)
      kw(4379, INTEGER)
      kw(4380, INT8)
      kw(4381, INTEGER8)
      kw(4382, INT16)
      kw(4383, INTEGER16)
      kw(4384, INT32)
      kw(4385, INTEGER32)
      kw(4386, INT64)
      kw(4387, INTEGER64)
      kw(4388, INT128)
      kw(4389, INTEGER128)
      kw(4390, INT256)
      kw(4391, INTEGER256)
      kw(4392, INTERSECT)
      kw(4393, INTERVAL)
      kw(4394, IS)
      kw(4395, LEADING)
      kw(4396, LEFT)
      kw(4397, LET)
      kw(4398, LIKE)
      kw(4399, LIMIT)
      kw(4400, LIST)
      kw(4401, LN)
      kw(4402, LOCAL)
      kw(4403, LOCAL_DATETIME)
      kw(4404, LOCAL_TIME)
      kw(4405, LOCAL_TIMESTAMP)
      kw(4406, LOG)
      kw(4407, LOG10)
      kw(4408, LOWER)
      kw(4409, LTRIM)
      kw(4410, MATCH)
      kw(4411, MAX)
      kw(4412, MIN)
      kw(4413, MINUTE)
      kw(4414, MOD)
      kw(4415, MONTH)
      kw(4416, NEXT)
      kw(4417, NODETACH)
      kw(4418, NORMALIZE)
      kw(4419, NOT)
      kw(4420, NOTHING)
      kw(4421, NULL)
      kw(4422, NULLS)
      kw(4423, NULLIF)
      kw(4424, OCTET_LENGTH)
      kw(4425, OF)
      kw(4426, OFFSET)
      kw(4427, OPTIONAL)
      kw(4428, OR)
      kw(4429, ORDER)
      kw(4430, OTHERWISE)
      kw(4431, PARAMETER)
      kw(4432, PARAMETERS)
      kw(4433, PATH)
      kw(4434, PATH_LENGTH)
      kw(4435, PATHS)
      kw(4436, PERCENTILE_CONT)
      kw(4437, PERCENTILE_DISC)
      kw(4438, POWER)
      kw(4439, PRECISION)
      kw(4440, PROPERTY_EXISTS)
      kw(4441, RADIANS)
      kw(4442, REAL)
      kw(4443, RECORD)
      kw(4444, REMOVE)
      kw(4445, REPLACE)
      kw(4446, RESET)
      kw(4447, RETURN)
      kw(4448, RIGHT)
      kw(4449, ROLLBACK)
      kw(4450, RTRIM)
      kw(4451, SAME)
      kw(4452, SCHEMA)
      kw(4453, SECOND)
      kw(4454, SELECT)
      kw(4455, SESSION)
      kw(4456, SESSION_USER)
      kw(4457, SET)
      kw(4458, SIGNED)
      kw(4459, SIN)
      kw(4460, SINH)
      kw(4461, SIZE)
      kw(4462, SKIP)
      kw(4463, SMALL)
      kw(4464, SMALLINT)
      kw(4465, SQRT)
      kw(4466, START)
      kw(4467, STDDEV_POP)
      kw(4468, STDDEV_SAMP)
      kw(4469, STRING)
      kw(4470, SUM)
      kw(4471, TAN)
      kw(4472, TANH)
      kw(4473, THEN)
      kw(4474, TIME)
      kw(4475, TIMESTAMP)
      kw(4476, TRAILING)
      kw(4477, TRIM)
      kw(4478, TRUE)
      kw(4479, TYPED)
      kw(4480, UBIGINT)
      kw(4481, UINT)
      kw(4482, UINT8)
      kw(4483, UINT16)
      kw(4484, UINT32)
      kw(4485, UINT64)
      kw(4486, UINT128)
      kw(4487, UINT256)
      kw(4488, UNION)
      kw(4489, UNKNOWN)
      kw(4490, UNSIGNED)
      kw(4491, UPPER)
      kw(4492, USE)
      kw(4493, USMALLINT)
      kw(4494, VALUE)
      kw(4495, VARBINARY)
      kw(4496, VARCHAR)
      kw(4497, VARIABLE)
      kw(4498, WHEN)
      kw(4499, WHERE)
      kw(4500, WITH)
      kw(4501, XOR)
      kw(4502, YEAR)
      kw(4503, YIELD)
      kw(4504, ZONED)
      kw(4505, ZONED_DATETIME)
      kw(4506, ZONED_TIME)
  BNFdef(4507, pre-reserved word)
    alt(4508)
      kw(4509, ABSTRACT)
      kw(4510, AGGREGATE)
      kw(4511, AGGREGATES)
      kw(4512, ALTER)
      kw(4513, CATALOG)
      kw(4514, CLEAR)
      kw(4515, CLONE)
      kw(4516, CONSTRAINT)
      kw(4517, CURRENT_ROLE)
      kw(4518, CURRENT_USER)
      kw(4519, DATA)
      kw(4520, DIRECTORY)
      kw(4521, DRYRUN)
      kw(4522, EXACT)
      kw(4523, EXISTING)
      kw(4524, FUNCTION)
      kw(4525, GQLSTATUS)
      kw(4526, GRANT)
      kw(4527, INSTANT)
      kw(4528, INFINITY)
      kw(4529, NUMBER)
      kw(4530, NUMERIC)
      kw(4531, ON)
      kw(4532, OPEN)
      kw(4533, PARTITION)
      kw(4534, PROCEDURE)
      kw(4535, PRODUCT)
      kw(4536, PROJECT)
      kw(4537, QUERY)
      kw(4538, RECORDS)
      kw(4539, REFERENCE)
      kw(4540, RENAME)
      kw(4541, REVOKE)
      kw(4542, SUBSTRING)
      kw(4543, SYSTEM_USER)
      kw(4544, TEMPORAL)
      kw(4545, UNIQUE)
      kw(4546, UNIT)
      kw(4547, VALUES)
      kw(4548, WHITESPACE)
  BNFdef(4549, non-reserved word)
    alt(4550)
      kw(4551, ACYCLIC)
      kw(4552, BINDING)
      kw(4553, BINDINGS)
      kw(4554, CONNECTING)
      kw(4555, DESTINATION)
      kw(4556, DIFFERENT)
      kw(4557, DIRECTED)
      kw(4558, EDGE)
      kw(4559, EDGES)
      kw(4560, ELEMENT)
      kw(4561, ELEMENTS)
      kw(4562, FIRST)
      kw(4563, GRAPH)
      kw(4564, GROUPS)
      kw(4565, KEEP)
      kw(4566, LABEL)
      kw(4567, LABELED)
      kw(4568, LABELS)
      kw(4569, LAST)
      kw(4570, NFC)
      kw(4571, NFD)
      kw(4572, NFKC)
      kw(4573, NFKD)
      kw(4574, NO)
      kw(4575, NODE)
      kw(4576, NORMALIZED)
      kw(4577, ONLY)
      kw(4578, ORDINALITY)
      kw(4579, PROPERTY)
      kw(4580, READ)
      kw(4581, RELATIONSHIP)
      kw(4582, RELATIONSHIPS)
      kw(4583, REPEATABLE)
      kw(4584, SHORTEST)
      kw(4585, SIMPLE)
      kw(4586, SOURCE)
      kw(4587, TABLE)
      kw(4588, TEMP)
      kw(4589, TO)
      kw(4590, TRAIL)
      kw(4591, TRANSACTION)
      kw(4592, TYPE)
      kw(4593, UNDIRECTED)
      kw(4594, VERTEX)
      kw(4595, WALK)
      kw(4596, WITHOUT)
      kw(4597, WRITE)
      kw(4598, ZONE)
  BNFdef(4599, multiset alternation operator)
    terminalsymbol(4600)
  BNFdef(4601, delimiter token)
    alt(4602)
      BNF(4603, GQL special character)
      BNF(4604, bracket right arrow)
      BNF(4605, bracket tilde right arrow)
      BNF(4606, character string literal)
      BNF(4607, concatenation operator)
      BNF(4608, date string)
      BNF(4609, datetime string)
      BNF(4610, delimited identifier)
      BNF(4611, double colon)
      BNF(4612, double period)
      BNF(4613, duration string)
      BNF(4614, greater than operator)
      BNF(4615, greater than or equals operator)
      BNF(4616, left arrow)
      BNF(4617, left arrow bracket)
      BNF(4618, left arrow tilde)
      BNF(4619, left arrow tilde bracket)
      BNF(4620, left minus right)
      BNF(4621, left minus slash)
      BNF(4622, left tilde slash)
      BNF(4623, less than operator)
      BNF(4624, less than or equals operator)
      BNF(4625, minus left bracket)
      BNF(4626, minus slash)
      BNF(4627, not equals operator)
      BNF(4628, right arrow)
      BNF(4629, right bracket minus)
      BNF(4630, right bracket tilde)
      BNF(4631, right double arrow)
      BNF(4632, slash minus)
      BNF(4633, slash minus right)
      BNF(4634, slash tilde)
      BNF(4635, slash tilde right)
      BNF(4636, tilde left bracket)
      BNF(4637, tilde right arrow)
      BNF(4638, tilde slash)
      BNF(4639, time string)
  BNFdef(4640, bracket right arrow)
    terminalsymbol(4641)
  BNFdef(4642, bracket tilde right arrow)
    terminalsymbol(4643)
  BNFdef(4644, concatenation operator)
    terminalsymbol(4645)
  BNFdef(4646, double colon)
    terminalsymbol(4647)
  BNFdef(4648, double dollar sign)
    terminalsymbol(4649)
  BNFdef(4650, double minus sign)
    terminalsymbol(4651)
  BNFdef(4652, double period)
    terminalsymbol(4653)
  BNFdef(4654, greater than operator)
    BNF(4655, right angle bracket)
  BNFdef(4656, greater than or equals operator)
    terminalsymbol(4657)
  BNFdef(4658, left arrow)
    terminalsymbol(4659)
  BNFdef(4660, left arrow tilde)
    terminalsymbol(4661)
  BNFdef(4662, left arrow bracket)
    terminalsymbol(4663)
  BNFdef(4664, left arrow tilde bracket)
    terminalsymbol(4665)
  BNFdef(4666, left minus right)
    terminalsymbol(4667)
  BNFdef(4668, left minus slash)
    terminalsymbol(4669)
  BNFdef(4670, left tilde slash)
    terminalsymbol(4671)
  BNFdef(4672, less than operator)
    BNF(4673, left angle bracket)
  BNFdef(4674, less than or equals operator)
    terminalsymbol(4675)
  BNFdef(4676, minus left bracket)
    terminalsymbol(4677)
  BNFdef(4678, minus slash)
    terminalsymbol(4679)
  BNFdef(4680, not equals operator)
    terminalsymbol(4681)
  BNFdef(4682, right arrow)
    terminalsymbol(4683)
  BNFdef(4684, right bracket minus)
    terminalsymbol(4685)
  BNFdef(4686, right bracket tilde)
    terminalsymbol(4687)
  BNFdef(4688, right double arrow)
    terminalsymbol(4689)
  BNFdef(4690, slash minus)
    terminalsymbol(4691)
  BNFdef(4692, slash minus right)
    terminalsymbol(4693)
  BNFdef(4694, slash tilde)
    terminalsymbol(4695)
  BNFdef(4696, slash tilde right)
    terminalsymbol(4697)
  BNFdef(4698, tilde left bracket)
    terminalsymbol(4699)
  BNFdef(4700, tilde right arrow)
    terminalsymbol(4701)
  BNFdef(4702, tilde slash)
    terminalsymbol(4703)
  BNFdef(4704, double solidus)
    terminalsymbol(4705)
  BNFdef(4706, separator)
    repeat(4707)
      group(4708)
        alt(4709)
          BNF(4710, comment)
          BNF(4711, whitespace)
  BNFdef(4712, whitespace)
    group(4713)
  BNFdef(4714, truncating whitespace)
    group(4715)
  BNFdef(4716, bidirectional control character)
    group(4717)
  BNFdef(4718, comment)
    alt(4719)
      BNF(4720, simple comment)
      BNF(4721, bracketed comment)
  BNFdef(4722, simple comment)
    group(4723)
      BNF(4724, simple comment introducer)
      opt(4725)
        repeat(4726)
          BNF(4727, simple comment character)
      BNF(4728, newline)
  BNFdef(4729, simple comment introducer)
    alt(4730)
      BNF(4731, double solidus)
      BNF(4732, double minus sign)
  BNFdef(4733, simple comment character)
    group(4734)
  BNFdef(4735, bracketed comment)
    group(4736)
      BNF(4737, bracketed comment introducer)
      BNF(4738, bracketed comment contents)
      BNF(4739, bracketed comment terminator)
  BNFdef(4740, bracketed comment introducer)
    terminalsymbol(4741)
  BNFdef(4742, bracketed comment terminator)
    terminalsymbol(4743)
  BNFdef(4744, bracketed comment contents)
    group(4745)
  BNFdef(4746, newline)
    group(4747)
  BNFdef(4748, edge synonym)
    alt(4749)
      kw(4750, EDGE)
      kw(4751, RELATIONSHIP)
  BNFdef(4752, edges synonym)
    alt(4753)
      kw(4754, EDGES)
      kw(4755, RELATIONSHIPS)
  BNFdef(4756, node synonym)
    alt(4757)
      kw(4758, NODE)
      kw(4759, VERTEX)
  BNFdef(4760, implies)
    alt(4761)
      BNF(4762, right double arrow)
      kw(4763, IMPLIES)
  BNFdef(4764, GQL terminal character)
    alt(4765)
      BNF(4766, GQL language character)
      BNF(4767, other language character)
  BNFdef(4768, GQL language character)
    alt(4769)
      BNF(4770, simple Latin letter)
      BNF(4771, digit)
      BNF(4772, GQL special character)
  BNFdef(4773, simple Latin letter)
    alt(4774)
      BNF(4775, simple Latin lower-case letter)
      BNF(4776, simple Latin upper-case letter)
  BNFdef(4777, simple Latin lower-case letter)
    alt(4778)
      terminalsymbol(4779)
      terminalsymbol(4780)
      terminalsymbol(4781)
      terminalsymbol(4782)
      terminalsymbol(4783)
      terminalsymbol(4784)
      terminalsymbol(4785)
      terminalsymbol(4786)
      terminalsymbol(4787)
      terminalsymbol(4788)
      terminalsymbol(4789)
      terminalsymbol(4790)
      terminalsymbol(4791)
      terminalsymbol(4792)
      terminalsymbol(4793)
      terminalsymbol(4794)
      terminalsymbol(4795)
      terminalsymbol(4796)
      terminalsymbol(4797)
      terminalsymbol(4798)
      terminalsymbol(4799)
      terminalsymbol(4800)
      terminalsymbol(4801)
      terminalsymbol(4802)
      terminalsymbol(4803)
      terminalsymbol(4804)
  BNFdef(4805, simple Latin upper-case letter)
    alt(4806)
      terminalsymbol(4807)
      terminalsymbol(4808)
      terminalsymbol(4809)
      terminalsymbol(4810)
      terminalsymbol(4811)
      terminalsymbol(4812)
      terminalsymbol(4813)
      terminalsymbol(4814)
      terminalsymbol(4815)
      terminalsymbol(4816)
      terminalsymbol(4817)
      terminalsymbol(4818)
      terminalsymbol(4819)
      terminalsymbol(4820)
      terminalsymbol(4821)
      terminalsymbol(4822)
      terminalsymbol(4823)
      terminalsymbol(4824)
      terminalsymbol(4825)
      terminalsymbol(4826)
      terminalsymbol(4827)
      terminalsymbol(4828)
      terminalsymbol(4829)
      terminalsymbol(4830)
      terminalsymbol(4831)
      terminalsymbol(4832)
  BNFdef(4833, hex digit)
    alt(4834)
      BNF(4835, standard digit)
      terminalsymbol(4836)
      terminalsymbol(4837)
      terminalsymbol(4838)
      terminalsymbol(4839)
      terminalsymbol(4840)
      terminalsymbol(4841)
      terminalsymbol(4842)
      terminalsymbol(4843)
      terminalsymbol(4844)
      terminalsymbol(4845)
      terminalsymbol(4846)
      terminalsymbol(4847)
  BNFdef(4848, digit)
    alt(4849)
      BNF(4850, standard digit)
      BNF(4851, other digit)
  BNFdef(4852, standard digit)
    alt(4853)
      BNF(4854, octal digit)
      terminalsymbol(4855)
      terminalsymbol(4856)
  BNFdef(4857, octal digit)
    alt(4858)
      BNF(4859, binary digit)
      terminalsymbol(4860)
      terminalsymbol(4861)
      terminalsymbol(4862)
      terminalsymbol(4863)
      terminalsymbol(4864)
      terminalsymbol(4865)
  BNFdef(4866, binary digit)
    alt(4867)
      terminalsymbol(4868)
      terminalsymbol(4869)
  BNFdef(4870, other digit)
    group(4871)
  BNFdef(4872, GQL special character)
    alt(4873)
      BNF(4874, space)
      BNF(4875, ampersand)
      BNF(4876, asterisk)
      BNF(4877, colon)
      BNF(4878, equals operator)
      BNF(4879, comma)
      BNF(4880, commercial at)
      BNF(4881, dollar sign)
      BNF(4882, double quote)
      BNF(4883, exclamation mark)
      BNF(4884, grave accent)
      BNF(4885, right angle bracket)
      BNF(4886, left brace)
      BNF(4887, left bracket)
      BNF(4888, left paren)
      BNF(4889, left angle bracket)
      BNF(4890, minus sign)
      BNF(4891, period)
      BNF(4892, plus sign)
      BNF(4893, question mark)
      BNF(4894, quote)
      BNF(4895, reverse solidus)
      BNF(4896, right brace)
      BNF(4897, right bracket)
      BNF(4898, right paren)
      BNF(4899, solidus)
      BNF(4900, underscore)
      BNF(4901, vertical bar)
      BNF(4902, percent)
      BNF(4903, tilde)
  BNFdef(4904, space)
    terminalsymbol(4905)
  BNFdef(4906, ampersand)
    terminalsymbol(4907)
  BNFdef(4908, asterisk)
    terminalsymbol(4909)
  BNFdef(4910, colon)
    terminalsymbol(4911)
  BNFdef(4912, comma)
    terminalsymbol(4913)
  BNFdef(4914, commercial at)
    terminalsymbol(4915)
  BNFdef(4916, dollar sign)
    terminalsymbol(4917)
  BNFdef(4918, double quote)
    terminalsymbol(4919)
  BNFdef(4920, equals operator)
    terminalsymbol(4921)
  BNFdef(4922, exclamation mark)
    terminalsymbol(4923)
  BNFdef(4924, right angle bracket)
    terminalsymbol(4925)
  BNFdef(4926, grave accent)
    terminalsymbol(4927)
  BNFdef(4928, left brace)
    terminalsymbol(4929)
  BNFdef(4930, left bracket)
    terminalsymbol(4931)
  BNFdef(4932, left paren)
    terminalsymbol(4933)
  BNFdef(4934, left angle bracket)
    terminalsymbol(4935)
  BNFdef(4936, minus sign)
    terminalsymbol(4937)
  BNFdef(4938, percent)
    terminalsymbol(4939)
  BNFdef(4940, period)
    terminalsymbol(4941)
  BNFdef(4942, plus sign)
    terminalsymbol(4943)
  BNFdef(4944, question mark)
    terminalsymbol(4945)
  BNFdef(4946, quote)
    terminalsymbol(4947)
  BNFdef(4948, reverse solidus)
    terminalsymbol(4949)
  BNFdef(4950, right brace)
    terminalsymbol(4951)
  BNFdef(4952, right bracket)
    terminalsymbol(4953)
  BNFdef(4954, right paren)
    terminalsymbol(4955)
  BNFdef(4956, solidus)
    terminalsymbol(4957)
  BNFdef(4958, tilde)
    terminalsymbol(4959)
  BNFdef(4960, underscore)
    terminalsymbol(4961)
  BNFdef(4962, vertical bar)
    terminalsymbol(4963)
  BNFdef(4964, other language character)
    group(4965)
--- PASS: TestNewGenerator (0.05s)
PASS

Process finished with the exit code 0
